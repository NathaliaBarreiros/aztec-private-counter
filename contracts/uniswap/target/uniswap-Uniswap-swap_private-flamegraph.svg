<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = true;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/tmp/uniswap-Uniswap-swap_private.json-main</text><text id="details" fill="rgb(0,0,0)" x="10" y="389.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="30003"><g><title>acir::arithmetic (712 gates, 2.37%)</title><rect x="0.0000%" y="325" width="2.3731%" height="23" fill="rgb(255,226,226)" fg:x="0" fg:w="712"/><text x="0.2500%" y="339.50">ac..</text></g><g><title>acir::blackbox::range (2,941 gates, 9.80%)</title><rect x="2.3731%" y="325" width="9.8024%" height="23" fill="rgb(255,203,203)" fg:x="712" fg:w="2941"/><text x="2.6231%" y="339.50">acir::blackbox..</text></g><g><title>acir::memory::init (1,478 gates, 4.93%)</title><rect x="12.1754%" y="325" width="4.9262%" height="23" fill="rgb(255,216,216)" fg:x="3653" fg:w="1478"/><text x="12.4254%" y="339.50">acir::..</text></g><g><title>private_context.nr:400:13::call_private_function_internal(
                contract_address,
                function_selector,
                args_hash,
                start_side_effect_counter,
                is_static_call,
            ) (2 gates, 0.01%)</title><rect x="17.1016%" y="277" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5131" fg:w="2"/><text x="17.3516%" y="291.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="17.1016%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5131" fg:w="2"/><text x="17.3516%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.1083%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5133" fg:w="1"/><text x="17.3583%" y="267.50"></text></g><g><title>call_interfaces.nr:155:23::context.call_private_function_with_args_hash (5 gates, 0.02%)</title><rect x="17.1016%" y="301" width="0.0167%" height="23" fill="rgb(255,248,248)" fg:x="5131" fg:w="5"/><text x="17.3516%" y="315.50"></text></g><g><title>private_context.nr:435:36::end_side_effect_counter + 1 (3 gates, 0.01%)</title><rect x="17.1083%" y="277" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="5133" fg:w="3"/><text x="17.3583%" y="291.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="17.1116%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5134" fg:w="2"/><text x="17.3616%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.1183%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5136" fg:w="1"/><text x="17.3683%" y="99.50"></text></g><g><title>main.nr:127:13::TokenBridge::at(input_asset_bridge).get_config().view (83 gates, 0.28%)</title><rect x="17.1016%" y="325" width="0.2766%" height="23" fill="rgb(255,242,242)" fg:x="5131" fg:w="83"/><text x="17.3516%" y="339.50"></text></g><g><title>call_interfaces.nr:161:9::returns.get_preimage (78 gates, 0.26%)</title><rect x="17.1183%" y="301" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="315.50"></text></g><g><title>returns_hash.nr:29:30::hash_args_array(preimage) (78 gates, 0.26%)</title><rect x="17.1183%" y="277" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="291.50"></text></g><g><title>hash.nr:89:9::poseidon2_hash_with_separator(args, GENERATOR_INDEX__FUNCTION_ARGS) (78 gates, 0.26%)</title><rect x="17.1183%" y="253" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="267.50"></text></g><g><title>hash.nr:248:5::poseidon2_hash(inputs_with_separator) (78 gates, 0.26%)</title><rect x="17.1183%" y="229" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="243.50"></text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (78 gates, 0.26%)</title><rect x="17.1183%" y="205" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="219.50"></text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (78 gates, 0.26%)</title><rect x="17.1183%" y="181" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="195.50"></text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (78 gates, 0.26%)</title><rect x="17.1183%" y="157" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="171.50"></text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (78 gates, 0.26%)</title><rect x="17.1183%" y="133" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="147.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (78 gates, 0.26%)</title><rect x="17.1183%" y="109" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5136" fg:w="78"/><text x="17.3683%" y="123.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="17.1216%" y="85" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5137" fg:w="77"/><text x="17.3716%" y="99.50"></text></g><g><title>private_context.nr:400:13::call_private_function_internal(
                contract_address,
                function_selector,
                args_hash,
                start_side_effect_counter,
                is_static_call,
            ) (1 gates, 0.00%)</title><rect x="17.3783%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5214" fg:w="1"/><text x="17.6283%" y="291.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="17.3783%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5214" fg:w="1"/><text x="17.6283%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.3816%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5215" fg:w="1"/><text x="17.6316%" y="267.50"></text></g><g><title>call_interfaces.nr:155:23::context.call_private_function_with_args_hash (4 gates, 0.01%)</title><rect x="17.3783%" y="301" width="0.0133%" height="23" fill="rgb(255,248,248)" fg:x="5214" fg:w="4"/><text x="17.6283%" y="315.50"></text></g><g><title>private_context.nr:435:36::end_side_effect_counter + 1 (3 gates, 0.01%)</title><rect x="17.3816%" y="277" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="5215" fg:w="3"/><text x="17.6316%" y="291.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="17.3849%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5216" fg:w="2"/><text x="17.6349%" y="267.50"></text></g><g><title>main.nr:129:13::TokenBridge::at(output_asset_bridge).get_config().view (81 gates, 0.27%)</title><rect x="17.3783%" y="325" width="0.2700%" height="23" fill="rgb(255,242,242)" fg:x="5214" fg:w="81"/><text x="17.6283%" y="339.50"></text></g><g><title>call_interfaces.nr:161:9::returns.get_preimage (77 gates, 0.26%)</title><rect x="17.3916%" y="301" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="315.50"></text></g><g><title>returns_hash.nr:29:30::hash_args_array(preimage) (77 gates, 0.26%)</title><rect x="17.3916%" y="277" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="291.50"></text></g><g><title>hash.nr:89:9::poseidon2_hash_with_separator(args, GENERATOR_INDEX__FUNCTION_ARGS) (77 gates, 0.26%)</title><rect x="17.3916%" y="253" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="267.50"></text></g><g><title>hash.nr:248:5::poseidon2_hash(inputs_with_separator) (77 gates, 0.26%)</title><rect x="17.3916%" y="229" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="243.50"></text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (77 gates, 0.26%)</title><rect x="17.3916%" y="205" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="219.50"></text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (77 gates, 0.26%)</title><rect x="17.3916%" y="181" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="195.50"></text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (77 gates, 0.26%)</title><rect x="17.3916%" y="157" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="171.50"></text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (77 gates, 0.26%)</title><rect x="17.3916%" y="133" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="147.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (77 gates, 0.26%)</title><rect x="17.3916%" y="109" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="123.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="17.3916%" y="85" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5218" fg:w="77"/><text x="17.6416%" y="99.50"></text></g><g><title>main.nr:134:13::input_asset.eq(input_asset_bridge_config.token) (1 gates, 0.00%)</title><rect x="17.6482%" y="325" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5295" fg:w="1"/><text x="17.8982%" y="339.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.6482%" y="301" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5295" fg:w="1"/><text x="17.8982%" y="315.50"></text></g><g><title>call_interfaces.nr:94:9::context
            .call_private_function_with_args_hash(
                self.target_contract,
                self.selector,
                self.args_hash,
                false,
            )
            .assert_empty (1 gates, 0.00%)</title><rect x="17.6516%" y="301" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5296" fg:w="1"/><text x="17.9016%" y="315.50"></text></g><g><title>returns_hash.nr:14:19::self.hash, 0 (1 gates, 0.00%)</title><rect x="17.6516%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5296" fg:w="1"/><text x="17.9016%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.6516%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5296" fg:w="1"/><text x="17.9016%" y="267.50"></text></g><g><title>private_context.nr:400:13::call_private_function_internal(
                contract_address,
                function_selector,
                args_hash,
                start_side_effect_counter,
                is_static_call,
            ) (2 gates, 0.01%)</title><rect x="17.6549%" y="277" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5297" fg:w="2"/><text x="17.9049%" y="291.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="17.6549%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5297" fg:w="2"/><text x="17.9049%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.6616%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5299" fg:w="1"/><text x="17.9116%" y="267.50"></text></g><g><title>main.nr:139:9::Token::at(input_asset)
            .transfer_to_public(
                context.msg_sender(),
                context.this_address(),
                input_amount,
                nonce_for_transfer_to_public_approval,
            )
            .call (6 gates, 0.02%)</title><rect x="17.6516%" y="325" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="5296" fg:w="6"/><text x="17.9016%" y="339.50"></text></g><g><title>call_interfaces.nr:94:9::context
            .call_private_function_with_args_hash (5 gates, 0.02%)</title><rect x="17.6549%" y="301" width="0.0167%" height="23" fill="rgb(255,248,248)" fg:x="5297" fg:w="5"/><text x="17.9049%" y="315.50"></text></g><g><title>private_context.nr:435:36::end_side_effect_counter + 1 (3 gates, 0.01%)</title><rect x="17.6616%" y="277" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="5299" fg:w="3"/><text x="17.9116%" y="291.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="17.6649%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5300" fg:w="2"/><text x="17.9149%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.6716%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5302" fg:w="1"/><text x="17.9216%" y="195.50"></text></g><g><title>hash.nr:431:9::sponge.absorb (78 gates, 0.26%)</title><rect x="17.6716%" y="253" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5302" fg:w="78"/><text x="17.9216%" y="267.50"></text></g><g><title>poseidon2.nr:46:13::self.perform_duplex (78 gates, 0.26%)</title><rect x="17.6716%" y="229" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5302" fg:w="78"/><text x="17.9216%" y="243.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (78 gates, 0.26%)</title><rect x="17.6716%" y="205" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5302" fg:w="78"/><text x="17.9216%" y="219.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="17.6749%" y="181" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5303" fg:w="77"/><text x="17.9249%" y="195.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="17.9315%" y="181" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="5380" fg:w="3"/><text x="18.1815%" y="195.50"></text></g><g><title>main.nr:139:9::Token::at(input_asset)
            .transfer_to_public (158 gates, 0.53%)</title><rect x="17.6716%" y="325" width="0.5266%" height="23" fill="rgb(255,239,239)" fg:x="5302" fg:w="158"/><text x="17.9216%" y="339.50"></text></g><g><title>main.nr:14:1::#[aztec] (158 gates, 0.53%)</title><rect x="17.6716%" y="301" width="0.5266%" height="23" fill="rgb(255,239,239)" fg:x="5302" fg:w="158"/><text x="17.9216%" y="315.50"></text></g><g><title>hash.nr:97:9::poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS) (158 gates, 0.53%)</title><rect x="17.6716%" y="277" width="0.5266%" height="23" fill="rgb(255,239,239)" fg:x="5302" fg:w="158"/><text x="17.9216%" y="291.50"></text></g><g><title>hash.nr:434:5::sponge.squeeze (80 gates, 0.27%)</title><rect x="17.9315%" y="253" width="0.2666%" height="23" fill="rgb(255,242,242)" fg:x="5380" fg:w="80"/><text x="18.1815%" y="267.50"></text></g><g><title>poseidon2.nr:59:9::self.perform_duplex (80 gates, 0.27%)</title><rect x="17.9315%" y="229" width="0.2666%" height="23" fill="rgb(255,242,242)" fg:x="5380" fg:w="80"/><text x="18.1815%" y="243.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (80 gates, 0.27%)</title><rect x="17.9315%" y="205" width="0.2666%" height="23" fill="rgb(255,242,242)" fg:x="5380" fg:w="80"/><text x="18.1815%" y="219.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="17.9415%" y="181" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5383" fg:w="77"/><text x="18.1915%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.1982%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5460" fg:w="1"/><text x="18.4482%" y="195.50"></text></g><g><title>hash.nr:431:9::sponge.absorb (78 gates, 0.26%)</title><rect x="18.1982%" y="253" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5460" fg:w="78"/><text x="18.4482%" y="267.50"></text></g><g><title>poseidon2.nr:46:13::self.perform_duplex (78 gates, 0.26%)</title><rect x="18.1982%" y="229" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5460" fg:w="78"/><text x="18.4482%" y="243.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (78 gates, 0.26%)</title><rect x="18.1982%" y="205" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="5460" fg:w="78"/><text x="18.4482%" y="219.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="18.2015%" y="181" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5461" fg:w="77"/><text x="18.4515%" y="195.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="18.4582%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5538" fg:w="2"/><text x="18.7082%" y="195.50"></text></g><g><title>call_interfaces.nr:359:25::hash_args(self.args) (157 gates, 0.52%)</title><rect x="18.1982%" y="301" width="0.5233%" height="23" fill="rgb(255,239,239)" fg:x="5460" fg:w="157"/><text x="18.4482%" y="315.50"></text></g><g><title>hash.nr:97:9::poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS) (157 gates, 0.52%)</title><rect x="18.1982%" y="277" width="0.5233%" height="23" fill="rgb(255,239,239)" fg:x="5460" fg:w="157"/><text x="18.4482%" y="291.50"></text></g><g><title>hash.nr:434:5::sponge.squeeze (79 gates, 0.26%)</title><rect x="18.4582%" y="253" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="5538" fg:w="79"/><text x="18.7082%" y="267.50"></text></g><g><title>poseidon2.nr:59:9::self.perform_duplex (79 gates, 0.26%)</title><rect x="18.4582%" y="229" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="5538" fg:w="79"/><text x="18.7082%" y="243.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (79 gates, 0.26%)</title><rect x="18.4582%" y="205" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="5538" fg:w="79"/><text x="18.7082%" y="219.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="18.4648%" y="181" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="5540" fg:w="77"/><text x="18.7148%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.7215%" y="229" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5617" fg:w="1"/><text x="18.9715%" y="243.50"></text></g><g><title>main.nr:149:9::Uniswap::at(context.this_address())
            ._approve_bridge_and_exit_input_asset_to_L1(
                input_asset,
                input_asset_bridge,
                input_amount,
            )
            .enqueue (159 gates, 0.53%)</title><rect x="18.1982%" y="325" width="0.5299%" height="23" fill="rgb(255,239,239)" fg:x="5460" fg:w="159"/><text x="18.4482%" y="339.50"></text></g><g><title>call_interfaces.nr:361:9::context.call_public_function_with_args_hash (2 gates, 0.01%)</title><rect x="18.7215%" y="301" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5617" fg:w="2"/><text x="18.9715%" y="315.50"></text></g><g><title>private_context.nr:494:23::self.next_counter (2 gates, 0.01%)</title><rect x="18.7215%" y="277" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5617" fg:w="2"/><text x="18.9715%" y="291.50"></text></g><g><title>private_context.nr:582:9::self.side_effect_counter += 1 (2 gates, 0.01%)</title><rect x="18.7215%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5617" fg:w="2"/><text x="18.9715%" y="267.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="18.7248%" y="229" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5618" fg:w="1"/><text x="18.9748%" y="243.50"></text></g><g><title>main.nr:162:13::!input_asset_bridge_config.portal.is_zero() (1 gates, 0.00%)</title><rect x="18.7281%" y="325" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5619" fg:w="1"/><text x="18.9781%" y="339.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.7281%" y="301" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5619" fg:w="1"/><text x="18.9781%" y="315.50"></text></g><g><title>main.nr:166:13::!output_asset_bridge_config.portal.is_zero() (1 gates, 0.00%)</title><rect x="18.7315%" y="325" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5620" fg:w="1"/><text x="18.9815%" y="339.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.7315%" y="301" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5620" fg:w="1"/><text x="18.9815%" y="315.50"></text></g><g><title>sha256.nr:110:30::attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) (20 gates, 0.07%)</title><rect x="18.7348%" y="229" width="0.0667%" height="23" fill="rgb(255,246,246)" fg:x="5621" fg:w="20"/><text x="18.9848%" y="243.50"></text></g><g><title>acir::blackbox::range (20 gates, 0.07%)</title><rect x="18.7348%" y="205" width="0.0667%" height="23" fill="rgb(255,246,246)" fg:x="5621" fg:w="20"/><text x="18.9848%" y="219.50"></text></g><g><title>sha256.nr:289:19::msg_block[int_byte_ptr] % mask, zero (1 gates, 0.00%)</title><rect x="18.8015%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5641" fg:w="1"/><text x="19.0515%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.8015%" y="157" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5641" fg:w="1"/><text x="19.0515%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.8048%" y="157" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5642" fg:w="1"/><text x="19.0548%" y="171.50"></text></g><g><title>sha256.nr:289:19::msg_block[int_byte_ptr] % mask (2 gates, 0.01%)</title><rect x="18.8048%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5642" fg:w="2"/><text x="19.0548%" y="195.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="18.8081%" y="157" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5643" fg:w="1"/><text x="19.0581%" y="171.50"></text></g><g><title>sha256.nr:483:5::verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR) (7 gates, 0.02%)</title><rect x="18.8015%" y="205" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="5641" fg:w="7"/><text x="19.0515%" y="219.50"></text></g><g><title>sha256.nr:296:23::msg_block[i], zero (4 gates, 0.01%)</title><rect x="18.8115%" y="181" width="0.0133%" height="23" fill="rgb(255,248,248)" fg:x="5644" fg:w="4"/><text x="19.0615%" y="195.50"></text></g><g><title>acir::arithmetic (4 gates, 0.01%)</title><rect x="18.8115%" y="157" width="0.0133%" height="23" fill="rgb(255,248,248)" fg:x="5644" fg:w="4"/><text x="19.0615%" y="171.50"></text></g><g><title>sha256.nr:486:5::verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr) (1 gates, 0.00%)</title><rect x="18.8248%" y="205" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5648" fg:w="1"/><text x="19.0748%" y="219.50"></text></g><g><title>sha256.nr:327:19::msg_block[int_byte_ptr], msg_item (1 gates, 0.00%)</title><rect x="18.8248%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5648" fg:w="1"/><text x="19.0748%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.8248%" y="157" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5648" fg:w="1"/><text x="19.0748%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.8281%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5649" fg:w="1"/><text x="19.0781%" y="195.50"></text></g><g><title>sha256.nr:491:29::reconstructed_len * TWO_POW_32 (5 gates, 0.02%)</title><rect x="18.8281%" y="205" width="0.0167%" height="23" fill="rgb(255,248,248)" fg:x="5649" fg:w="5"/><text x="19.0781%" y="219.50"></text></g><g><title>acir::blackbox::range (4 gates, 0.01%)</title><rect x="18.8315%" y="181" width="0.0133%" height="23" fill="rgb(255,248,248)" fg:x="5650" fg:w="4"/><text x="19.0815%" y="195.50"></text></g><g><title>sha256.nr:112:9::verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size) (14 gates, 0.05%)</title><rect x="18.8015%" y="229" width="0.0467%" height="23" fill="rgb(255,246,246)" fg:x="5641" fg:w="14"/><text x="19.0515%" y="243.50"></text></g><g><title>sha256.nr:495:15::reconstructed_len, len (1 gates, 0.00%)</title><rect x="18.8448%" y="205" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5654" fg:w="1"/><text x="19.0948%" y="219.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="18.8448%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="5654" fg:w="1"/><text x="19.0948%" y="195.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="18.8481%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="5655" fg:w="2"/><text x="19.0981%" y="195.50"></text></g><g><title>sha256.nr:502:13::sha256_compression(msg_block, state) (3,894 gates, 12.98%)</title><rect x="18.8481%" y="205" width="12.9787%" height="23" fill="rgb(255,196,196)" fg:x="5655" fg:w="3894"/><text x="19.0981%" y="219.50">sha256.nr:502:13::s..</text></g><g><title>acir::blackbox::sha256_compression (3,892 gates, 12.97%)</title><rect x="18.8548%" y="181" width="12.9720%" height="23" fill="rgb(255,196,196)" fg:x="5657" fg:w="3892"/><text x="19.1048%" y="195.50">acir::blackbox::sha..</text></g><g><title>sha256.nr:114:9::hash_final_block(msg_block, h) (3,934 gates, 13.11%)</title><rect x="18.8481%" y="229" width="13.1120%" height="23" fill="rgb(255,195,195)" fg:x="5655" fg:w="3934"/><text x="19.0981%" y="243.50">sha256.nr:114:9::has..</text></g><g><title>sha256.nr:506:32::(state[j] as Field).to_be_bytes (40 gates, 0.13%)</title><rect x="31.8268%" y="205" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="9549" fg:w="40"/><text x="32.0768%" y="219.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="31.8268%" y="181" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="9549" fg:w="40"/><text x="32.0768%" y="195.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="31.8268%" y="157" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="9549" fg:w="40"/><text x="32.0768%" y="171.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="31.8268%" y="133" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="9549" fg:w="40"/><text x="32.0768%" y="147.50"></text></g><g><title>sha256.nr:49:26::build_msg_block(msg, message_size, msg_start) (87 gates, 0.29%)</title><rect x="31.9601%" y="229" width="0.2900%" height="23" fill="rgb(255,241,241)" fg:x="9589" fg:w="87"/><text x="32.2101%" y="243.50"></text></g><g><title>acir::blackbox::range (87 gates, 0.29%)</title><rect x="31.9601%" y="205" width="0.2900%" height="23" fill="rgb(255,241,241)" fg:x="9589" fg:w="87"/><text x="32.2101%" y="219.50"></text></g><g><title>sha256.nr:238:27::msg_block[i], msg_item as u32 (1 gates, 0.00%)</title><rect x="32.2501%" y="205" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="9676" fg:w="1"/><text x="32.5001%" y="219.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.2501%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="9676" fg:w="1"/><text x="32.5001%" y="195.50"></text></g><g><title>acir::arithmetic (94 gates, 0.31%)</title><rect x="32.2534%" y="157" width="0.3133%" height="23" fill="rgb(255,241,241)" fg:x="9677" fg:w="94"/><text x="32.5034%" y="171.50"></text></g><g><title>sha256.nr:244:20::lshift8(msg_item, 1) (258 gates, 0.86%)</title><rect x="32.2534%" y="205" width="0.8599%" height="23" fill="rgb(255,236,236)" fg:x="9677" fg:w="258"/><text x="32.5034%" y="219.50"></text></g><g><title>sha256.nr:400:13::item * TWO_POW_8 (258 gates, 0.86%)</title><rect x="32.2534%" y="181" width="0.8599%" height="23" fill="rgb(255,236,236)" fg:x="9677" fg:w="258"/><text x="32.5034%" y="195.50"></text></g><g><title>acir::blackbox::range (164 gates, 0.55%)</title><rect x="32.5667%" y="157" width="0.5466%" height="23" fill="rgb(255,238,238)" fg:x="9771" fg:w="164"/><text x="32.8167%" y="171.50"></text></g><g><title>acir::arithmetic (141 gates, 0.47%)</title><rect x="33.1134%" y="181" width="0.4700%" height="23" fill="rgb(255,239,239)" fg:x="9935" fg:w="141"/><text x="33.3634%" y="195.50"></text></g><g><title>sha256.nr:56:36::verify_msg_block(msg, message_size, msg_block, msg_start) (648 gates, 2.16%)</title><rect x="32.2501%" y="229" width="2.1598%" height="23" fill="rgb(255,228,228)" fg:x="9676" fg:w="648"/><text x="32.5001%" y="243.50">s..</text></g><g><title>sha256.nr:247:24::msg_item + msg[k] as u32 (389 gates, 1.30%)</title><rect x="33.1134%" y="205" width="1.2965%" height="23" fill="rgb(255,232,232)" fg:x="9935" fg:w="389"/><text x="33.3634%" y="219.50"></text></g><g><title>acir::blackbox::range (248 gates, 0.83%)</title><rect x="33.5833%" y="181" width="0.8266%" height="23" fill="rgb(255,236,236)" fg:x="10076" fg:w="248"/><text x="33.8333%" y="195.50"></text></g><g><title>acir::arithmetic (9 gates, 0.03%)</title><rect x="34.4099%" y="205" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="10324" fg:w="9"/><text x="34.6599%" y="219.50"></text></g><g><title>sha256.nr:64:21::sha256_compression(msg_block, h) (11,688 gates, 38.96%)</title><rect x="34.4099%" y="229" width="38.9561%" height="23" fill="rgb(255,156,156)" fg:x="10324" fg:w="11688"/><text x="34.6599%" y="243.50">sha256.nr:64:21::sha256_compression(msg_block, h)</text></g><g><title>acir::blackbox::sha256_compression (11,679 gates, 38.93%)</title><rect x="34.4399%" y="205" width="38.9261%" height="23" fill="rgb(255,156,156)" fg:x="10333" fg:w="11679"/><text x="34.6899%" y="219.50">acir::blackbox::sha256_compression</text></g><g><title>sha256.nr:75:26::build_msg_block(msg, message_size, msg_start) (18 gates, 0.06%)</title><rect x="73.3660%" y="229" width="0.0600%" height="23" fill="rgb(255,246,246)" fg:x="22012" fg:w="18"/><text x="73.6160%" y="243.50"></text></g><g><title>acir::blackbox::range (18 gates, 0.06%)</title><rect x="73.3660%" y="205" width="0.0600%" height="23" fill="rgb(255,246,246)" fg:x="22012" fg:w="18"/><text x="73.6160%" y="219.50"></text></g><g><title>acir::arithmetic (18 gates, 0.06%)</title><rect x="73.4260%" y="157" width="0.0600%" height="23" fill="rgb(255,246,246)" fg:x="22030" fg:w="18"/><text x="73.6760%" y="171.50"></text></g><g><title>sha256.nr:244:20::lshift8(msg_item, 1) (50 gates, 0.17%)</title><rect x="73.4260%" y="205" width="0.1667%" height="23" fill="rgb(255,243,243)" fg:x="22030" fg:w="50"/><text x="73.6760%" y="219.50"></text></g><g><title>sha256.nr:400:13::item * TWO_POW_8 (50 gates, 0.17%)</title><rect x="73.4260%" y="181" width="0.1667%" height="23" fill="rgb(255,243,243)" fg:x="22030" fg:w="50"/><text x="73.6760%" y="195.50"></text></g><g><title>acir::blackbox::range (32 gates, 0.11%)</title><rect x="73.4860%" y="157" width="0.1067%" height="23" fill="rgb(255,245,245)" fg:x="22048" fg:w="32"/><text x="73.7360%" y="171.50"></text></g><g><title>acir::arithmetic (27 gates, 0.09%)</title><rect x="73.5926%" y="181" width="0.0900%" height="23" fill="rgb(255,245,245)" fg:x="22080" fg:w="27"/><text x="73.8426%" y="195.50"></text></g><g><title>sha256.nr:81:36::verify_msg_block(msg, message_size, msg_block, msg_start) (123 gates, 0.41%)</title><rect x="73.4260%" y="229" width="0.4100%" height="23" fill="rgb(255,240,240)" fg:x="22030" fg:w="123"/><text x="73.6760%" y="243.50"></text></g><g><title>sha256.nr:247:24::msg_item + msg[k] as u32 (73 gates, 0.24%)</title><rect x="73.5926%" y="205" width="0.2433%" height="23" fill="rgb(255,242,242)" fg:x="22080" fg:w="73"/><text x="73.8426%" y="219.50"></text></g><g><title>acir::blackbox::range (46 gates, 0.15%)</title><rect x="73.6826%" y="181" width="0.1533%" height="23" fill="rgb(255,244,244)" fg:x="22107" fg:w="46"/><text x="73.9326%" y="195.50"></text></g><g><title>util.nr:107:24::sha256_to_field(hash_bytes) (16,539 gates, 55.12%)</title><rect x="18.7348%" y="301" width="55.1245%" height="23" fill="rgb(255,138,138)" fg:x="5621" fg:w="16539"/><text x="18.9848%" y="315.50">util.nr:107:24::sha256_to_field(hash_bytes)</text></g><g><title>hash.nr:25:25::sha256::digest(bytes_to_hash) (16,539 gates, 55.12%)</title><rect x="18.7348%" y="277" width="55.1245%" height="23" fill="rgb(255,138,138)" fg:x="5621" fg:w="16539"/><text x="18.9848%" y="291.50">hash.nr:25:25::sha256::digest(bytes_to_hash)</text></g><g><title>sha256.nr:26:5::sha256_var(msg, N as u64) (16,539 gates, 55.12%)</title><rect x="18.7348%" y="253" width="55.1245%" height="23" fill="rgb(255,138,138)" fg:x="5621" fg:w="16539"/><text x="18.9848%" y="267.50">sha256.nr:26:5::sha256_var(msg, N as u64)</text></g><g><title>sha256.nr:84:17::verify_msg_block_padding(msg_block, msg_byte_ptr) (7 gates, 0.02%)</title><rect x="73.8359%" y="229" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="22153" fg:w="7"/><text x="74.0859%" y="243.50"></text></g><g><title>sha256.nr:259:5::verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE) (7 gates, 0.02%)</title><rect x="73.8359%" y="205" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="22153" fg:w="7"/><text x="74.0859%" y="219.50"></text></g><g><title>sha256.nr:296:23::msg_block[i], zero (7 gates, 0.02%)</title><rect x="73.8359%" y="181" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="22153" fg:w="7"/><text x="74.0859%" y="195.50"></text></g><g><title>acir::arithmetic (7 gates, 0.02%)</title><rect x="73.8359%" y="157" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="22153" fg:w="7"/><text x="74.0859%" y="171.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="73.8593%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22160" fg:w="40"/><text x="74.1093%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="73.8593%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22160" fg:w="40"/><text x="74.1093%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="73.8593%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22160" fg:w="40"/><text x="74.1093%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="73.9926%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="22200" fg:w="124"/><text x="74.2426%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="73.9926%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="22200" fg:w="124"/><text x="74.2426%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="74.4059%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="22324" fg:w="174"/><text x="74.6559%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (240 gates, 0.80%)</title><rect x="74.4059%" y="277" width="0.7999%" height="23" fill="rgb(255,236,236)" fg:x="22324" fg:w="240"/><text x="74.6559%" y="291.50"></text></g><g><title>acir::blackbox::range (66 gates, 0.22%)</title><rect x="74.9858%" y="253" width="0.2200%" height="23" fill="rgb(255,243,243)" fg:x="22498" fg:w="66"/><text x="75.2358%" y="267.50"></text></g><g><title>util.nr:74:9::input_asset_bridge_portal_address.to_field().to_be_bytes (405 gates, 1.35%)</title><rect x="73.8593%" y="301" width="1.3499%" height="23" fill="rgb(255,232,232)" fg:x="22160" fg:w="405"/><text x="74.1093%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="75.2058%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="22564" fg:w="1"/><text x="75.4558%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="75.2058%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="22564" fg:w="1"/><text x="75.4558%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="75.2091%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22565" fg:w="40"/><text x="75.4591%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="75.2091%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22565" fg:w="40"/><text x="75.4591%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="75.2091%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22565" fg:w="40"/><text x="75.4591%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="75.3425%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="22605" fg:w="124"/><text x="75.5925%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="75.3425%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="22605" fg:w="124"/><text x="75.5925%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="75.7558%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="22729" fg:w="174"/><text x="76.0058%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.80%)</title><rect x="75.7558%" y="277" width="0.7966%" height="23" fill="rgb(255,236,236)" fg:x="22729" fg:w="239"/><text x="76.0058%" y="291.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="76.3357%" y="253" width="0.2166%" height="23" fill="rgb(255,243,243)" fg:x="22903" fg:w="65"/><text x="76.5857%" y="267.50"></text></g><g><title>util.nr:75:37::input_amount.to_field().to_be_bytes (404 gates, 1.35%)</title><rect x="75.2091%" y="301" width="1.3465%" height="23" fill="rgb(255,232,232)" fg:x="22565" fg:w="404"/><text x="75.4591%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="76.5523%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="22968" fg:w="1"/><text x="76.8023%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="76.5523%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="22968" fg:w="1"/><text x="76.8023%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="76.5557%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22969" fg:w="40"/><text x="76.8057%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="76.5557%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22969" fg:w="40"/><text x="76.8057%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="76.5557%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="22969" fg:w="40"/><text x="76.8057%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="76.6890%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="23009" fg:w="124"/><text x="76.9390%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="76.6890%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="23009" fg:w="124"/><text x="76.9390%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="77.1023%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="23133" fg:w="174"/><text x="77.3523%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.80%)</title><rect x="77.1023%" y="277" width="0.7966%" height="23" fill="rgb(255,236,236)" fg:x="23133" fg:w="239"/><text x="77.3523%" y="291.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="77.6822%" y="253" width="0.2166%" height="23" fill="rgb(255,243,243)" fg:x="23307" fg:w="65"/><text x="77.9322%" y="267.50"></text></g><g><title>util.nr:76:44::uniswap_fee_tier.to_be_bytes (404 gates, 1.35%)</title><rect x="76.5557%" y="301" width="1.3465%" height="23" fill="rgb(255,232,232)" fg:x="22969" fg:w="404"/><text x="76.8057%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="77.8989%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="23372" fg:w="1"/><text x="78.1489%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="77.8989%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="23372" fg:w="1"/><text x="78.1489%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="77.9022%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="23373" fg:w="40"/><text x="78.1522%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="77.9022%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="23373" fg:w="40"/><text x="78.1522%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="77.9022%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="23373" fg:w="40"/><text x="78.1522%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="78.0355%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="23413" fg:w="124"/><text x="78.2855%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="78.0355%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="23413" fg:w="124"/><text x="78.2855%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="78.4488%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="23537" fg:w="174"/><text x="78.6988%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.80%)</title><rect x="78.4488%" y="277" width="0.7966%" height="23" fill="rgb(255,236,236)" fg:x="23537" fg:w="239"/><text x="78.6988%" y="291.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="79.0288%" y="253" width="0.2166%" height="23" fill="rgb(255,243,243)" fg:x="23711" fg:w="65"/><text x="79.2788%" y="267.50"></text></g><g><title>util.nr:78:9::output_asset_bridge_portal_address.to_field().to_be_bytes (404 gates, 1.35%)</title><rect x="77.9022%" y="301" width="1.3465%" height="23" fill="rgb(255,232,232)" fg:x="23373" fg:w="404"/><text x="78.1522%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="79.2454%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="23776" fg:w="1"/><text x="79.4954%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="79.2454%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="23776" fg:w="1"/><text x="79.4954%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="79.2487%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="23777" fg:w="40"/><text x="79.4987%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="79.2487%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="23777" fg:w="40"/><text x="79.4987%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="79.2487%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="23777" fg:w="40"/><text x="79.4987%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="79.3821%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="23817" fg:w="124"/><text x="79.6321%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="79.3821%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="23817" fg:w="124"/><text x="79.6321%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="79.7954%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="23941" fg:w="174"/><text x="80.0454%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (240 gates, 0.80%)</title><rect x="79.7954%" y="277" width="0.7999%" height="23" fill="rgb(255,236,236)" fg:x="23941" fg:w="240"/><text x="80.0454%" y="291.50"></text></g><g><title>acir::blackbox::range (66 gates, 0.22%)</title><rect x="80.3753%" y="253" width="0.2200%" height="23" fill="rgb(255,243,243)" fg:x="24115" fg:w="66"/><text x="80.6253%" y="267.50"></text></g><g><title>util.nr:79:42::minimum_output_amount.to_field().to_be_bytes (405 gates, 1.35%)</title><rect x="79.2487%" y="301" width="1.3499%" height="23" fill="rgb(255,232,232)" fg:x="23777" fg:w="405"/><text x="79.4987%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="80.5953%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="24181" fg:w="1"/><text x="80.8453%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="80.5953%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="24181" fg:w="1"/><text x="80.8453%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="80.5986%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="24182" fg:w="40"/><text x="80.8486%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="80.5986%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="24182" fg:w="40"/><text x="80.8486%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="80.5986%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="24182" fg:w="40"/><text x="80.8486%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="80.7319%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="24222" fg:w="124"/><text x="80.9819%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="80.7319%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="24222" fg:w="124"/><text x="80.9819%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="81.1452%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="24346" fg:w="174"/><text x="81.3952%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.80%)</title><rect x="81.1452%" y="277" width="0.7966%" height="23" fill="rgb(255,236,236)" fg:x="24346" fg:w="239"/><text x="81.3952%" y="291.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="81.7252%" y="253" width="0.2166%" height="23" fill="rgb(255,243,243)" fg:x="24520" fg:w="65"/><text x="81.9752%" y="267.50"></text></g><g><title>util.nr:81:9::secret_hash_for_L1_to_l2_message.to_be_bytes (404 gates, 1.35%)</title><rect x="80.5986%" y="301" width="1.3465%" height="23" fill="rgb(255,232,232)" fg:x="24182" fg:w="404"/><text x="80.8486%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="81.9418%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="24585" fg:w="1"/><text x="82.1918%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="81.9418%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="24585" fg:w="1"/><text x="82.1918%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.13%)</title><rect x="81.9451%" y="277" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="24586" fg:w="40"/><text x="82.1951%" y="291.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.13%)</title><rect x="81.9451%" y="253" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="24586" fg:w="40"/><text x="82.1951%" y="267.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="81.9451%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="24586" fg:w="40"/><text x="82.1951%" y="243.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.41%)</title><rect x="82.0785%" y="277" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="24626" fg:w="124"/><text x="82.3285%" y="291.50"></text></g><g><title>acir::arithmetic (124 gates, 0.41%)</title><rect x="82.0785%" y="253" width="0.4133%" height="23" fill="rgb(255,240,240)" fg:x="24626" fg:w="124"/><text x="82.3285%" y="267.50"></text></g><g><title>acir::arithmetic (174 gates, 0.58%)</title><rect x="82.4918%" y="253" width="0.5799%" height="23" fill="rgb(255,238,238)" fg:x="24750" fg:w="174"/><text x="82.7418%" y="267.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.80%)</title><rect x="82.4918%" y="277" width="0.7966%" height="23" fill="rgb(255,236,236)" fg:x="24750" fg:w="239"/><text x="82.7418%" y="291.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="83.0717%" y="253" width="0.2166%" height="23" fill="rgb(255,243,243)" fg:x="24924" fg:w="65"/><text x="83.3217%" y="267.50"></text></g><g><title>main.nr:170:28::compute_swap_private_content_hash(
            input_asset_bridge_config.portal,
            input_amount,
            uniswap_fee_tier,
            output_asset_bridge_config.portal,
            minimum_output_amount,
            secret_hash_for_L1_to_l2_message,
            caller_on_L1,
        ) (19,369 gates, 64.56%)</title><rect x="18.7348%" y="325" width="64.5569%" height="23" fill="rgb(255,129,129)" fg:x="5621" fg:w="19369"/><text x="18.9848%" y="339.50">main.nr:170:28::compute_swap_private_content_hash(
            input_asset_bridge_config.portal,
          ..</text></g><g><title>util.nr:82:40::caller_on_L1.to_field().to_be_bytes (404 gates, 1.35%)</title><rect x="81.9451%" y="301" width="1.3465%" height="23" fill="rgb(255,232,232)" fg:x="24586" fg:w="404"/><text x="82.1951%" y="315.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="83.2883%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="24989" fg:w="1"/><text x="83.5383%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="83.2883%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="24989" fg:w="1"/><text x="83.5383%" y="267.50"></text></g><g><title>acir::arithmetic (4 gates, 0.01%)</title><rect x="83.2917%" y="253" width="0.0133%" height="23" fill="rgb(255,248,248)" fg:x="24990" fg:w="4"/><text x="83.5417%" y="267.50"></text></g><g><title>with_hash.nr:58:39::header.global_variables.block_number as u32 (709 gates, 2.36%)</title><rect x="83.2917%" y="277" width="2.3631%" height="23" fill="rgb(255,226,226)" fg:x="24990" fg:w="709"/><text x="83.5417%" y="291.50">wi..</text></g><g><title>acir::blackbox::range (705 gates, 2.35%)</title><rect x="83.3050%" y="253" width="2.3498%" height="23" fill="rgb(255,227,227)" fg:x="24994" fg:w="705"/><text x="83.5550%" y="267.50">a..</text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="85.6548%" y="109" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="25699" fg:w="1"/><text x="85.9048%" y="123.50"></text></g><g><title>with_hash.nr:64:20::WithHash::new(
            /// Safety: We verify that a hash of the hint/packed data matches the stored hash.
            unsafe {
                oracle::storage::storage_read(address, storage_slot, historical_block_number)
            },
        ) (78 gates, 0.26%)</title><rect x="85.6548%" y="277" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="291.50"></text></g><g><title>with_hash.nr:31:37::poseidon2_hash(packed) (78 gates, 0.26%)</title><rect x="85.6548%" y="253" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="267.50"></text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (78 gates, 0.26%)</title><rect x="85.6548%" y="229" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="243.50"></text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (78 gates, 0.26%)</title><rect x="85.6548%" y="205" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="219.50"></text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (78 gates, 0.26%)</title><rect x="85.6548%" y="181" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="195.50"></text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (78 gates, 0.26%)</title><rect x="85.6548%" y="157" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="171.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (78 gates, 0.26%)</title><rect x="85.6548%" y="133" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="25699" fg:w="78"/><text x="85.9048%" y="147.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="85.6581%" y="109" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="25700" fg:w="77"/><text x="85.9081%" y="123.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="85.9147%" y="85" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="25777" fg:w="2"/><text x="86.1647%" y="99.50"></text></g><g><title>public_storage.nr:24:38::poseidon2_hash_with_separator(
            [contract_address.to_field(), storage_slot],
            GENERATOR_INDEX__PUBLIC_LEAF_INDEX,
        ) (79 gates, 0.26%)</title><rect x="85.9147%" y="253" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="267.50"></text></g><g><title>hash.nr:248:5::poseidon2_hash(inputs_with_separator) (79 gates, 0.26%)</title><rect x="85.9147%" y="229" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="243.50"></text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (79 gates, 0.26%)</title><rect x="85.9147%" y="205" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="219.50"></text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (79 gates, 0.26%)</title><rect x="85.9147%" y="181" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="195.50"></text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (79 gates, 0.26%)</title><rect x="85.9147%" y="157" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="171.50"></text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (79 gates, 0.26%)</title><rect x="85.9147%" y="133" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="147.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (79 gates, 0.26%)</title><rect x="85.9147%" y="109" width="0.2633%" height="23" fill="rgb(255,242,242)" fg:x="25777" fg:w="79"/><text x="86.1647%" y="123.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="85.9214%" y="85" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="25779" fg:w="77"/><text x="86.1714%" y="99.50"></text></g><g><title>public_storage.nr:32:13::get_public_data_witness(
                self.global_variables.block_number as u32,
                public_data_tree_index,
            ) (2 gates, 0.01%)</title><rect x="86.1780%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="25856" fg:w="2"/><text x="86.4280%" y="267.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="86.1780%" y="229" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="25856" fg:w="2"/><text x="86.4280%" y="243.50"></text></g><g><title>root.nr:19:28::leaf_index.to_le_bits (40 gates, 0.13%)</title><rect x="86.1847%" y="229" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="25858" fg:w="40"/><text x="86.4347%" y="243.50"></text></g><g><title>mod.nr:63:20::self._to_le_bits (40 gates, 0.13%)</title><rect x="86.1847%" y="205" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="25858" fg:w="40"/><text x="86.4347%" y="219.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.13%)</title><rect x="86.1847%" y="181" width="0.1333%" height="23" fill="rgb(255,244,244)" fg:x="25858" fg:w="40"/><text x="86.4347%" y="195.50"></text></g><g><title>root.nr:23:14::sibling_path[i] (2 gates, 0.01%)</title><rect x="86.3180%" y="229" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="25898" fg:w="2"/><text x="86.5680%" y="243.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="86.3180%" y="205" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="25898" fg:w="2"/><text x="86.5680%" y="219.50"></text></g><g><title>acir::arithmetic (157 gates, 0.52%)</title><rect x="86.3247%" y="61" width="0.5233%" height="23" fill="rgb(255,239,239)" fg:x="25900" fg:w="157"/><text x="86.5747%" y="75.50"></text></g><g><title>public_storage.nr:44:13::root_from_sibling_path(witness.leaf_preimage.hash(), witness.index, witness.path) (3,279 gates, 10.93%)</title><rect x="86.1847%" y="253" width="10.9289%" height="23" fill="rgb(255,200,200)" fg:x="25858" fg:w="3279"/><text x="86.4347%" y="267.50">public_storage.n..</text></g><g><title>root.nr:27:16::merkle_hash(hash_left, hash_right) (3,237 gates, 10.79%)</title><rect x="86.3247%" y="229" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="243.50">root.nr:27:16::m..</text></g><g><title>hash.nr:133:5::poseidon2_hash([left, right]) (3,237 gates, 10.79%)</title><rect x="86.3247%" y="205" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="219.50">hash.nr:133:5::p..</text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (3,237 gates, 10.79%)</title><rect x="86.3247%" y="181" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="195.50">hash.nr:239:5::s..</text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (3,237 gates, 10.79%)</title><rect x="86.3247%" y="157" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="171.50">poseidon2.nr:16:..</text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (3,237 gates, 10.79%)</title><rect x="86.3247%" y="133" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="147.50">poseidon2.nr:82:..</text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (3,237 gates, 10.79%)</title><rect x="86.3247%" y="109" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="123.50">poseidon2.nr:55:..</text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (3,237 gates, 10.79%)</title><rect x="86.3247%" y="85" width="10.7889%" height="23" fill="rgb(255,200,200)" fg:x="25900" fg:w="3237"/><text x="86.5747%" y="99.50">poseidon2.nr:35:..</text></g><g><title>acir::blackbox::poseidon2_permutation (3,080 gates, 10.27%)</title><rect x="86.8480%" y="61" width="10.2656%" height="23" fill="rgb(255,202,202)" fg:x="26057" fg:w="3080"/><text x="87.0980%" y="75.50">acir::blackbox:..</text></g><g><title>public_data_tree_leaf_preimage.nr:88:10::self.slot == 0 (2 gates, 0.01%)</title><rect x="97.1136%" y="205" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29137" fg:w="2"/><text x="97.3636%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.1136%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29137" fg:w="2"/><text x="97.3636%" y="195.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:88:29::self.value == 0 (2 gates, 0.01%)</title><rect x="97.1203%" y="205" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29139" fg:w="2"/><text x="97.3703%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.1203%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29139" fg:w="2"/><text x="97.3703%" y="195.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:88:49::self.next_slot == 0 (2 gates, 0.01%)</title><rect x="97.1270%" y="205" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29141" fg:w="2"/><text x="97.3770%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.1270%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29141" fg:w="2"/><text x="97.3770%" y="195.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:88:73::self.next_index == 0 (2 gates, 0.01%)</title><rect x="97.1336%" y="205" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29143" fg:w="2"/><text x="97.3836%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.1336%" y="181" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29143" fg:w="2"/><text x="97.3836%" y="195.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:88:9::(self.slot == 0) &amp; (self.value == 0) &amp; (self.next_slot == 0) &amp; (self.next_index == 0) (1 gates, 0.00%)</title><rect x="97.1403%" y="205" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29145" fg:w="1"/><text x="97.3903%" y="219.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.1403%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29145" fg:w="1"/><text x="97.3903%" y="195.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:31:12::self.is_empty (10 gates, 0.03%)</title><rect x="97.1136%" y="229" width="0.0333%" height="23" fill="rgb(255,247,247)" fg:x="29137" fg:w="10"/><text x="97.3636%" y="243.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:88:9::(self.slot == 0) &amp; (self.value == 0) &amp; (self.next_slot == 0) (1 gates, 0.00%)</title><rect x="97.1436%" y="205" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29146" fg:w="1"/><text x="97.3936%" y="219.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.1436%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29146" fg:w="1"/><text x="97.3936%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.1470%" y="181" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29147" fg:w="1"/><text x="97.3970%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.1503%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29148" fg:w="1"/><text x="97.4003%" y="99.50"></text></g><g><title>poseidon2.nr:72:17::sponge.absorb (78 gates, 0.26%)</title><rect x="97.1503%" y="157" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="29148" fg:w="78"/><text x="97.4003%" y="171.50"></text></g><g><title>poseidon2.nr:42:13::self.perform_duplex (78 gates, 0.26%)</title><rect x="97.1503%" y="133" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="29148" fg:w="78"/><text x="97.4003%" y="147.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (78 gates, 0.26%)</title><rect x="97.1503%" y="109" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="29148" fg:w="78"/><text x="97.4003%" y="123.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="97.1536%" y="85" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="29149" fg:w="77"/><text x="97.4036%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.4103%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29226" fg:w="1"/><text x="97.6603%" y="99.50"></text></g><g><title>public_storage.nr:44:36::witness.leaf_preimage.hash (167 gates, 0.56%)</title><rect x="97.1136%" y="253" width="0.5566%" height="23" fill="rgb(255,238,238)" fg:x="29137" fg:w="167"/><text x="97.3636%" y="267.50"></text></g><g><title>public_data_tree_leaf_preimage.nr:34:13::crate::hash::poseidon2_hash([
                self.slot,
                self.value,
                (self.next_index as Field),
                self.next_slot,
            ]) (157 gates, 0.52%)</title><rect x="97.1470%" y="229" width="0.5233%" height="23" fill="rgb(255,239,239)" fg:x="29147" fg:w="157"/><text x="97.3970%" y="243.50"></text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (157 gates, 0.52%)</title><rect x="97.1470%" y="205" width="0.5233%" height="23" fill="rgb(255,239,239)" fg:x="29147" fg:w="157"/><text x="97.3970%" y="219.50"></text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (156 gates, 0.52%)</title><rect x="97.1503%" y="181" width="0.5199%" height="23" fill="rgb(255,239,239)" fg:x="29148" fg:w="156"/><text x="97.4003%" y="195.50"></text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (78 gates, 0.26%)</title><rect x="97.4103%" y="157" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="29226" fg:w="78"/><text x="97.6603%" y="171.50"></text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (78 gates, 0.26%)</title><rect x="97.4103%" y="133" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="29226" fg:w="78"/><text x="97.6603%" y="147.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (78 gates, 0.26%)</title><rect x="97.4103%" y="109" width="0.2600%" height="23" fill="rgb(255,242,242)" fg:x="29226" fg:w="78"/><text x="97.6603%" y="123.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="97.4136%" y="85" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="29227" fg:w="77"/><text x="97.6636%" y="99.50"></text></g><g><title>bn254.nr:105:15::a == b (3 gates, 0.01%)</title><rect x="97.6702%" y="157" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29304" fg:w="3"/><text x="97.9202%" y="171.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="97.6702%" y="133" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29304" fg:w="3"/><text x="97.9202%" y="147.50"></text></g><g><title>bn254.nr:110:16::field_less_than(a, b) (1 gates, 0.00%)</title><rect x="97.6802%" y="157" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29307" fg:w="1"/><text x="97.9302%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="97.6802%" y="133" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29307" fg:w="1"/><text x="97.9302%" y="147.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.6836%" y="61" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29308" fg:w="2"/><text x="97.9336%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (12 gates, 0.04%)</title><rect x="97.6836%" y="109" width="0.0400%" height="23" fill="rgb(255,247,247)" fg:x="29308" fg:w="12"/><text x="97.9336%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (12 gates, 0.04%)</title><rect x="97.6836%" y="85" width="0.0400%" height="23" fill="rgb(255,247,247)" fg:x="29308" fg:w="12"/><text x="97.9336%" y="99.50"></text></g><g><title>acir::blackbox::range (10 gates, 0.03%)</title><rect x="97.6902%" y="61" width="0.0333%" height="23" fill="rgb(255,247,247)" fg:x="29310" fg:w="10"/><text x="97.9402%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.7236%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29320" fg:w="1"/><text x="97.9736%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.7236%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29320" fg:w="7"/><text x="97.9736%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.7236%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29320" fg:w="7"/><text x="97.9736%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="97.7269%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29321" fg:w="6"/><text x="97.9769%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="97.7469%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29327" fg:w="3"/><text x="97.9969%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="97.7469%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29327" fg:w="3"/><text x="97.9969%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="97.7569%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29330" fg:w="1"/><text x="98.0069%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="97.7569%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29330" fg:w="1"/><text x="98.0069%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.7602%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29331" fg:w="2"/><text x="98.0102%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="97.7602%" y="85" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29331" fg:w="9"/><text x="98.0102%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="97.7602%" y="61" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29331" fg:w="9"/><text x="98.0102%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="97.7669%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29333" fg:w="7"/><text x="98.0169%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.7902%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29340" fg:w="1"/><text x="98.0402%" y="51.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (39 gates, 0.13%)</title><rect x="97.6836%" y="133" width="0.1300%" height="23" fill="rgb(255,244,244)" fg:x="29308" fg:w="39"/><text x="97.9336%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="97.7569%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29330" fg:w="17"/><text x="98.0069%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.7902%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29340" fg:w="7"/><text x="98.0402%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.7902%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29340" fg:w="7"/><text x="98.0402%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="97.7936%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29341" fg:w="6"/><text x="98.0436%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.8136%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29347" fg:w="1"/><text x="98.0636%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.8136%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29347" fg:w="7"/><text x="98.0636%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.8136%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29347" fg:w="7"/><text x="98.0636%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="97.8169%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29348" fg:w="6"/><text x="98.0669%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.8369%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29354" fg:w="1"/><text x="98.0869%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="97.8369%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29354" fg:w="8"/><text x="98.0869%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="97.8369%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29354" fg:w="8"/><text x="98.0869%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="97.8402%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29355" fg:w="7"/><text x="98.0902%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="97.8635%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29362" fg:w="3"/><text x="98.1135%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="97.8635%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29362" fg:w="3"/><text x="98.1135%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="97.8735%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29365" fg:w="1"/><text x="98.1235%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="97.8735%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29365" fg:w="1"/><text x="98.1235%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.8769%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29366" fg:w="2"/><text x="98.1269%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="97.8769%" y="85" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29366" fg:w="9"/><text x="98.1269%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="97.8769%" y="61" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29366" fg:w="9"/><text x="98.1269%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="97.8835%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29368" fg:w="7"/><text x="98.1335%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.9069%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29375" fg:w="1"/><text x="98.1569%" y="51.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (35 gates, 0.12%)</title><rect x="97.8136%" y="133" width="0.1167%" height="23" fill="rgb(255,244,244)" fg:x="29347" fg:w="35"/><text x="98.0636%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="97.8735%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29365" fg:w="17"/><text x="98.1235%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.9069%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29375" fg:w="7"/><text x="98.1569%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.9069%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29375" fg:w="7"/><text x="98.1569%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="97.9102%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29376" fg:w="6"/><text x="98.1602%" y="51.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="97.9302%" y="109" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29382" fg:w="1"/><text x="98.1802%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="97.9302%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29382" fg:w="1"/><text x="98.1802%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.9335%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29383" fg:w="1"/><text x="98.1835%" y="75.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.9335%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29383" fg:w="7"/><text x="98.1835%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="97.9335%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29383" fg:w="7"/><text x="98.1835%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="97.9369%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29384" fg:w="6"/><text x="98.1869%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="97.9569%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29390" fg:w="1"/><text x="98.2069%" y="75.50"></text></g><g><title>bn254.nr:111:17::assert_gt(b, a) (90 gates, 0.30%)</title><rect x="97.6836%" y="157" width="0.3000%" height="23" fill="rgb(255,241,241)" fg:x="29308" fg:w="90"/><text x="97.9336%" y="171.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="97.9302%" y="133" width="0.0533%" height="23" fill="rgb(255,246,246)" fg:x="29382" fg:w="16"/><text x="98.1802%" y="147.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="97.9569%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29390" fg:w="8"/><text x="98.2069%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="97.9569%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29390" fg:w="8"/><text x="98.2069%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="97.9602%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29391" fg:w="7"/><text x="98.2102%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="97.9835%" y="61" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29398" fg:w="2"/><text x="98.2335%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="97.9835%" y="109" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29398" fg:w="9"/><text x="98.2335%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="97.9835%" y="85" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29398" fg:w="9"/><text x="98.2335%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="97.9902%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29400" fg:w="7"/><text x="98.2402%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.0135%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29407" fg:w="1"/><text x="98.2635%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.0135%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29407" fg:w="7"/><text x="98.2635%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.0135%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29407" fg:w="7"/><text x="98.2635%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.0169%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29408" fg:w="6"/><text x="98.2669%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="98.0369%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29414" fg:w="3"/><text x="98.2869%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.0369%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29414" fg:w="3"/><text x="98.2869%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.0469%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29417" fg:w="1"/><text x="98.2969%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.0469%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29417" fg:w="1"/><text x="98.2969%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.0502%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29418" fg:w="2"/><text x="98.3002%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.0502%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29418" fg:w="8"/><text x="98.3002%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.0502%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29418" fg:w="8"/><text x="98.3002%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.0569%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29420" fg:w="6"/><text x="98.3069%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.0769%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29426" fg:w="1"/><text x="98.3269%" y="51.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (36 gates, 0.12%)</title><rect x="97.9835%" y="133" width="0.1200%" height="23" fill="rgb(255,244,244)" fg:x="29398" fg:w="36"/><text x="98.2335%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="98.0469%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29417" fg:w="17"/><text x="98.2969%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.0769%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29426" fg:w="8"/><text x="98.3269%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.0769%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29426" fg:w="8"/><text x="98.3269%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.0802%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29427" fg:w="7"/><text x="98.3302%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.1035%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29434" fg:w="1"/><text x="98.3535%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.1035%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29434" fg:w="8"/><text x="98.3535%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.1035%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29434" fg:w="8"/><text x="98.3535%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.1069%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29435" fg:w="7"/><text x="98.3569%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.1302%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29442" fg:w="1"/><text x="98.3802%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.1302%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29442" fg:w="7"/><text x="98.3802%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.1302%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29442" fg:w="7"/><text x="98.3802%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.1335%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29443" fg:w="6"/><text x="98.3835%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="98.1535%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29449" fg:w="3"/><text x="98.4035%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.1535%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29449" fg:w="3"/><text x="98.4035%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.1635%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29452" fg:w="1"/><text x="98.4135%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.1635%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29452" fg:w="1"/><text x="98.4135%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.1668%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29453" fg:w="2"/><text x="98.4168%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.1668%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29453" fg:w="8"/><text x="98.4168%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.1668%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29453" fg:w="8"/><text x="98.4168%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.1735%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29455" fg:w="6"/><text x="98.4235%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.1935%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29461" fg:w="1"/><text x="98.4435%" y="51.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (35 gates, 0.12%)</title><rect x="98.1035%" y="133" width="0.1167%" height="23" fill="rgb(255,244,244)" fg:x="29434" fg:w="35"/><text x="98.3535%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="98.1635%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29452" fg:w="17"/><text x="98.4135%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.1935%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29461" fg:w="8"/><text x="98.4435%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.1935%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29461" fg:w="8"/><text x="98.4435%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.1968%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29462" fg:w="7"/><text x="98.4468%" y="51.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.2202%" y="109" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29469" fg:w="1"/><text x="98.4702%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.2202%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29469" fg:w="1"/><text x="98.4702%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.2235%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29470" fg:w="1"/><text x="98.4735%" y="75.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.2235%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29470" fg:w="8"/><text x="98.4735%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.2235%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29470" fg:w="8"/><text x="98.4735%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.2268%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29471" fg:w="7"/><text x="98.4768%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.2502%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29478" fg:w="1"/><text x="98.5002%" y="75.50"></text></g><g><title>public_storage.nr:55:33::full_field_less_than(preimage.slot, public_data_tree_index) (181 gates, 0.60%)</title><rect x="97.6702%" y="253" width="0.6033%" height="23" fill="rgb(255,238,238)" fg:x="29304" fg:w="181"/><text x="97.9202%" y="267.50"></text></g><g><title>field.nr:39:5::lhs.lt (181 gates, 0.60%)</title><rect x="97.6702%" y="229" width="0.6033%" height="23" fill="rgb(255,238,238)" fg:x="29304" fg:w="181"/><text x="97.9202%" y="243.50"></text></g><g><title>mod.nr:240:13::bn254_lt(self, another) (181 gates, 0.60%)</title><rect x="97.6702%" y="205" width="0.6033%" height="23" fill="rgb(255,238,238)" fg:x="29304" fg:w="181"/><text x="97.9202%" y="219.50"></text></g><g><title>bn254.nr:122:5::gt(b, a) (181 gates, 0.60%)</title><rect x="97.6702%" y="181" width="0.6033%" height="23" fill="rgb(255,238,238)" fg:x="29304" fg:w="181"/><text x="97.9202%" y="195.50"></text></g><g><title>bn254.nr:114:17::assert_gt(a, b) (87 gates, 0.29%)</title><rect x="97.9835%" y="157" width="0.2900%" height="23" fill="rgb(255,241,241)" fg:x="29398" fg:w="87"/><text x="98.2335%" y="171.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="98.2202%" y="133" width="0.0533%" height="23" fill="rgb(255,246,246)" fg:x="29469" fg:w="16"/><text x="98.4702%" y="147.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.2502%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29478" fg:w="7"/><text x="98.5002%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.2502%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29478" fg:w="7"/><text x="98.5002%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.2535%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29479" fg:w="6"/><text x="98.5035%" y="75.50"></text></g><g><title>bn254.nr:105:15::a == b (3 gates, 0.01%)</title><rect x="98.2735%" y="157" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29485" fg:w="3"/><text x="98.5235%" y="171.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.2735%" y="133" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29485" fg:w="3"/><text x="98.5235%" y="147.50"></text></g><g><title>bn254.nr:110:16::field_less_than(a, b) (1 gates, 0.00%)</title><rect x="98.2835%" y="157" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29488" fg:w="1"/><text x="98.5335%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.2835%" y="133" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29488" fg:w="1"/><text x="98.5335%" y="147.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.2868%" y="61" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29489" fg:w="2"/><text x="98.5368%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.2868%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29489" fg:w="8"/><text x="98.5368%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.2868%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29489" fg:w="8"/><text x="98.5368%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.2935%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29491" fg:w="6"/><text x="98.5435%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.3135%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29497" fg:w="1"/><text x="98.5635%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.3135%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29497" fg:w="8"/><text x="98.5635%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.3135%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29497" fg:w="8"/><text x="98.5635%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.3168%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29498" fg:w="7"/><text x="98.5668%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="98.3402%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29505" fg:w="3"/><text x="98.5902%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.3402%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29505" fg:w="3"/><text x="98.5902%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.3502%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29508" fg:w="1"/><text x="98.6002%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.3502%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29508" fg:w="1"/><text x="98.6002%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.3535%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29509" fg:w="2"/><text x="98.6035%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="98.3535%" y="85" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29509" fg:w="9"/><text x="98.6035%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="98.3535%" y="61" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29509" fg:w="9"/><text x="98.6035%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.3602%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29511" fg:w="7"/><text x="98.6102%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.3835%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29518" fg:w="1"/><text x="98.6335%" y="51.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (36 gates, 0.12%)</title><rect x="98.2868%" y="133" width="0.1200%" height="23" fill="rgb(255,244,244)" fg:x="29489" fg:w="36"/><text x="98.5368%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="98.3502%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29508" fg:w="17"/><text x="98.6002%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.3835%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29518" fg:w="7"/><text x="98.6335%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.3835%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29518" fg:w="7"/><text x="98.6335%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.3868%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29519" fg:w="6"/><text x="98.6368%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.4068%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29525" fg:w="1"/><text x="98.6568%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.4068%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29525" fg:w="7"/><text x="98.6568%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.4068%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29525" fg:w="7"/><text x="98.6568%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.4102%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29526" fg:w="6"/><text x="98.6602%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.4302%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29532" fg:w="1"/><text x="98.6802%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.4302%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29532" fg:w="8"/><text x="98.6802%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.4302%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29532" fg:w="8"/><text x="98.6802%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.4335%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29533" fg:w="7"/><text x="98.6835%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="98.4568%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29540" fg:w="3"/><text x="98.7068%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.4568%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29540" fg:w="3"/><text x="98.7068%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.4668%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29543" fg:w="1"/><text x="98.7168%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.4668%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29543" fg:w="1"/><text x="98.7168%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.4702%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29544" fg:w="2"/><text x="98.7202%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="98.4702%" y="85" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29544" fg:w="9"/><text x="98.7202%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="98.4702%" y="61" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29544" fg:w="9"/><text x="98.7202%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.4768%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29546" fg:w="7"/><text x="98.7268%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.5001%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29553" fg:w="1"/><text x="98.7501%" y="51.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (35 gates, 0.12%)</title><rect x="98.4068%" y="133" width="0.1167%" height="23" fill="rgb(255,244,244)" fg:x="29525" fg:w="35"/><text x="98.6568%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="98.4668%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29543" fg:w="17"/><text x="98.7168%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.5001%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29553" fg:w="7"/><text x="98.7501%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.5001%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29553" fg:w="7"/><text x="98.7501%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.5035%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29554" fg:w="6"/><text x="98.7535%" y="51.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.5235%" y="109" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29560" fg:w="1"/><text x="98.7735%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.5235%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29560" fg:w="1"/><text x="98.7735%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.5268%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29561" fg:w="1"/><text x="98.7768%" y="75.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.5268%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29561" fg:w="7"/><text x="98.7768%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.5268%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29561" fg:w="7"/><text x="98.7768%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.5301%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29562" fg:w="6"/><text x="98.7801%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.5501%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29568" fg:w="1"/><text x="98.8001%" y="75.50"></text></g><g><title>bn254.nr:111:17::assert_gt(b, a) (87 gates, 0.29%)</title><rect x="98.2868%" y="157" width="0.2900%" height="23" fill="rgb(255,241,241)" fg:x="29489" fg:w="87"/><text x="98.5368%" y="171.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="98.5235%" y="133" width="0.0533%" height="23" fill="rgb(255,246,246)" fg:x="29560" fg:w="16"/><text x="98.7735%" y="147.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.5501%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29568" fg:w="8"/><text x="98.8001%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.5501%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29568" fg:w="8"/><text x="98.8001%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.5535%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29569" fg:w="7"/><text x="98.8035%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.5768%" y="61" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29576" fg:w="2"/><text x="98.8268%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="98.5768%" y="109" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29576" fg:w="9"/><text x="98.8268%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="98.5768%" y="85" width="0.0300%" height="23" fill="rgb(255,247,247)" fg:x="29576" fg:w="9"/><text x="98.8268%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.5835%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29578" fg:w="7"/><text x="98.8335%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.6068%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29585" fg:w="1"/><text x="98.8568%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.6068%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29585" fg:w="7"/><text x="98.8568%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.6068%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29585" fg:w="7"/><text x="98.8568%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.6101%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29586" fg:w="6"/><text x="98.8601%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="98.6301%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29592" fg:w="3"/><text x="98.8801%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.6301%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29592" fg:w="3"/><text x="98.8801%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.6401%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29595" fg:w="1"/><text x="98.8901%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.6401%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29595" fg:w="1"/><text x="98.8901%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.6435%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29596" fg:w="2"/><text x="98.8935%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.6435%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29596" fg:w="8"/><text x="98.8935%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.6435%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29596" fg:w="8"/><text x="98.8935%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.6501%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29598" fg:w="6"/><text x="98.9001%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.6701%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29604" fg:w="1"/><text x="98.9201%" y="51.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (36 gates, 0.12%)</title><rect x="98.5768%" y="133" width="0.1200%" height="23" fill="rgb(255,244,244)" fg:x="29576" fg:w="36"/><text x="98.8268%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="98.6401%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29595" fg:w="17"/><text x="98.8901%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.6701%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29604" fg:w="8"/><text x="98.9201%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.6701%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29604" fg:w="8"/><text x="98.9201%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.6735%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29605" fg:w="7"/><text x="98.9235%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.6968%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29612" fg:w="1"/><text x="98.9468%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.6968%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29612" fg:w="8"/><text x="98.9468%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.6968%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29612" fg:w="8"/><text x="98.9468%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.7001%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29613" fg:w="7"/><text x="98.9501%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.7235%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29620" fg:w="1"/><text x="98.9735%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.7235%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29620" fg:w="7"/><text x="98.9735%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.7235%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29620" fg:w="7"/><text x="98.9735%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.7268%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29621" fg:w="6"/><text x="98.9768%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="98.7468%" y="109" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29627" fg:w="3"/><text x="98.9968%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.7468%" y="85" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29627" fg:w="3"/><text x="98.9968%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.7568%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29630" fg:w="1"/><text x="99.0068%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.7568%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29630" fg:w="1"/><text x="99.0068%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.7601%" y="37" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29631" fg:w="2"/><text x="99.0101%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.7601%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29631" fg:w="8"/><text x="99.0101%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.7601%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29631" fg:w="8"/><text x="99.0101%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.7668%" y="37" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29633" fg:w="6"/><text x="99.0168%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.7868%" y="37" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29639" fg:w="1"/><text x="99.0368%" y="51.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (35 gates, 0.12%)</title><rect x="98.6968%" y="133" width="0.1167%" height="23" fill="rgb(255,244,244)" fg:x="29612" fg:w="35"/><text x="98.9468%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="98.7568%" y="109" width="0.0567%" height="23" fill="rgb(255,246,246)" fg:x="29630" fg:w="17"/><text x="99.0068%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.7868%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29639" fg:w="8"/><text x="99.0368%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.7868%" y="61" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29639" fg:w="8"/><text x="99.0368%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.7901%" y="37" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29640" fg:w="7"/><text x="99.0401%" y="51.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="98.8135%" y="109" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29647" fg:w="1"/><text x="99.0635%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="98.8135%" y="85" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29647" fg:w="1"/><text x="99.0635%" y="99.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8168%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29648" fg:w="1"/><text x="99.0668%" y="75.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.8168%" y="109" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29648" fg:w="8"/><text x="99.0668%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="98.8168%" y="85" width="0.0267%" height="23" fill="rgb(255,247,247)" fg:x="29648" fg:w="8"/><text x="99.0668%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="98.8201%" y="61" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29649" fg:w="7"/><text x="99.0701%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8434%" y="61" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29656" fg:w="1"/><text x="99.0934%" y="75.50"></text></g><g><title>public_storage.nr:56:36::full_field_less_than(public_data_tree_index, preimage.next_slot) (178 gates, 0.59%)</title><rect x="98.2735%" y="253" width="0.5933%" height="23" fill="rgb(255,238,238)" fg:x="29485" fg:w="178"/><text x="98.5235%" y="267.50"></text></g><g><title>field.nr:39:5::lhs.lt (178 gates, 0.59%)</title><rect x="98.2735%" y="229" width="0.5933%" height="23" fill="rgb(255,238,238)" fg:x="29485" fg:w="178"/><text x="98.5235%" y="243.50"></text></g><g><title>mod.nr:240:13::bn254_lt(self, another) (178 gates, 0.59%)</title><rect x="98.2735%" y="205" width="0.5933%" height="23" fill="rgb(255,238,238)" fg:x="29485" fg:w="178"/><text x="98.5235%" y="219.50"></text></g><g><title>bn254.nr:122:5::gt(b, a) (178 gates, 0.59%)</title><rect x="98.2735%" y="181" width="0.5933%" height="23" fill="rgb(255,238,238)" fg:x="29485" fg:w="178"/><text x="98.5235%" y="195.50"></text></g><g><title>bn254.nr:114:17::assert_gt(a, b) (87 gates, 0.29%)</title><rect x="98.5768%" y="157" width="0.2900%" height="23" fill="rgb(255,241,241)" fg:x="29576" fg:w="87"/><text x="98.8268%" y="171.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="98.8135%" y="133" width="0.0533%" height="23" fill="rgb(255,246,246)" fg:x="29647" fg:w="16"/><text x="99.0635%" y="147.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.8434%" y="109" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29656" fg:w="7"/><text x="99.0934%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="98.8434%" y="85" width="0.0233%" height="23" fill="rgb(255,247,247)" fg:x="29656" fg:w="7"/><text x="99.0934%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="98.8468%" y="61" width="0.0200%" height="23" fill="rgb(255,247,247)" fg:x="29657" fg:w="6"/><text x="99.0968%" y="75.50"></text></g><g><title>public_storage.nr:58:27::is_less_than_slot &amp; (is_next_greater_than | is_max) (1 gates, 0.00%)</title><rect x="98.8668%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29663" fg:w="1"/><text x="99.1168%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8668%" y="229" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29663" fg:w="1"/><text x="99.1168%" y="243.50"></text></g><g><title>public_storage.nr:58:48::is_next_greater_than | is_max (1 gates, 0.00%)</title><rect x="98.8701%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29664" fg:w="1"/><text x="99.1201%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8701%" y="229" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29664" fg:w="1"/><text x="99.1201%" y="243.50"></text></g><g><title>with_hash.nr:71:20::header.public_storage_historical_read (3,889 gates, 12.96%)</title><rect x="85.9147%" y="277" width="12.9620%" height="23" fill="rgb(255,196,196)" fg:x="25777" fg:w="3889"/><text x="86.1647%" y="291.50">with_hash.nr:71:20:..</text></g><g><title>public_storage.nr:64:17::preimage.slot,
                public_data_tree_index (1 gates, 0.00%)</title><rect x="98.8734%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29665" fg:w="1"/><text x="99.1234%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8734%" y="229" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29665" fg:w="1"/><text x="99.1234%" y="243.50"></text></g><g><title>with_hash.nr:73:12::hash != 0 (3 gates, 0.01%)</title><rect x="98.8768%" y="277" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29666" fg:w="3"/><text x="99.1268%" y="291.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="98.8768%" y="253" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29666" fg:w="3"/><text x="99.1268%" y="267.50"></text></g><g><title>with_hash.nr:74:23::hash, hint.get_hash() (2 gates, 0.01%)</title><rect x="98.8868%" y="277" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29669" fg:w="2"/><text x="99.1368%" y="291.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="98.8868%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29669" fg:w="2"/><text x="99.1368%" y="267.50"></text></g><g><title>main.nr:179:32::storage.portal_address.read (4,682 gates, 15.61%)</title><rect x="83.2917%" y="325" width="15.6051%" height="23" fill="rgb(255,190,190)" fg:x="24990" fg:w="4682"/><text x="83.5417%" y="339.50">main.nr:179:32::storage...</text></g><g><title>public_immutable.nr:106:9::WithHash::historical_public_storage_read(
            self.context.get_block_header(),
            self.context.this_address(),
            self.storage_slot,
        ) (4,682 gates, 15.61%)</title><rect x="83.2917%" y="301" width="15.6051%" height="23" fill="rgb(255,190,190)" fg:x="24990" fg:w="4682"/><text x="83.5417%" y="315.50">public_immutable.nr:106:..</text></g><g><title>with_hash.nr:79:17::hint.get_value(),
                T::unpack(std::mem::zeroed()) (1 gates, 0.00%)</title><rect x="98.8934%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29671" fg:w="1"/><text x="99.1434%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8934%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29671" fg:w="1"/><text x="99.1434%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="98.8968%" y="253" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29672" fg:w="1"/><text x="99.1468%" y="267.50"></text></g><g><title>main.nr:179:9::context.message_portal (3 gates, 0.01%)</title><rect x="98.8968%" y="325" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29672" fg:w="3"/><text x="99.1468%" y="339.50"></text></g><g><title>private_context.nr:290:68::self.next_counter (3 gates, 0.01%)</title><rect x="98.8968%" y="301" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29672" fg:w="3"/><text x="99.1468%" y="315.50"></text></g><g><title>private_context.nr:582:9::self.side_effect_counter += 1 (3 gates, 0.01%)</title><rect x="98.8968%" y="277" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29672" fg:w="3"/><text x="99.1468%" y="291.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="98.9001%" y="253" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29673" fg:w="2"/><text x="99.1501%" y="267.50"></text></g><g><title>acir::arithmetic (12 gates, 0.04%)</title><rect x="98.9068%" y="181" width="0.0400%" height="23" fill="rgb(255,247,247)" fg:x="29675" fg:w="12"/><text x="99.1568%" y="195.50"></text></g><g><title>hash.nr:431:9::sponge.absorb (243 gates, 0.81%)</title><rect x="98.9068%" y="253" width="0.8099%" height="23" fill="rgb(255,236,236)" fg:x="29675" fg:w="243"/><text x="99.1568%" y="267.50"></text></g><g><title>poseidon2.nr:46:13::self.perform_duplex (243 gates, 0.81%)</title><rect x="98.9068%" y="229" width="0.8099%" height="23" fill="rgb(255,236,236)" fg:x="29675" fg:w="243"/><text x="99.1568%" y="243.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (243 gates, 0.81%)</title><rect x="98.9068%" y="205" width="0.8099%" height="23" fill="rgb(255,236,236)" fg:x="29675" fg:w="243"/><text x="99.1568%" y="219.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (231 gates, 0.77%)</title><rect x="98.9468%" y="181" width="0.7699%" height="23" fill="rgb(255,236,236)" fg:x="29687" fg:w="231"/><text x="99.1968%" y="195.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="99.7167%" y="181" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29918" fg:w="3"/><text x="99.9667%" y="195.50"></text></g><g><title>hash.nr:65:9::hash_args(self.fields) (323 gates, 1.08%)</title><rect x="98.9068%" y="301" width="1.0766%" height="23" fill="rgb(255,234,234)" fg:x="29675" fg:w="323"/><text x="99.1568%" y="315.50"></text></g><g><title>hash.nr:97:9::poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS) (323 gates, 1.08%)</title><rect x="98.9068%" y="277" width="1.0766%" height="23" fill="rgb(255,234,234)" fg:x="29675" fg:w="323"/><text x="99.1568%" y="291.50"></text></g><g><title>hash.nr:434:5::sponge.squeeze (80 gates, 0.27%)</title><rect x="99.7167%" y="253" width="0.2666%" height="23" fill="rgb(255,242,242)" fg:x="29918" fg:w="80"/><text x="99.9667%" y="267.50"></text></g><g><title>poseidon2.nr:59:9::self.perform_duplex (80 gates, 0.27%)</title><rect x="99.7167%" y="229" width="0.2666%" height="23" fill="rgb(255,242,242)" fg:x="29918" fg:w="80"/><text x="99.9667%" y="243.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (80 gates, 0.27%)</title><rect x="99.7167%" y="205" width="0.2666%" height="23" fill="rgb(255,242,242)" fg:x="29918" fg:w="80"/><text x="99.9667%" y="219.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="99.7267%" y="181" width="0.2566%" height="23" fill="rgb(255,242,242)" fg:x="29921" fg:w="77"/><text x="99.9767%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="99.9833%" y="229" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="29998" fg:w="1"/><text x="100.2333%" y="243.50"></text></g><g><title>initialization_utils.nr:33:5::context.push_nullifier_read_request (3 gates, 0.01%)</title><rect x="99.9833%" y="301" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29998" fg:w="3"/><text x="100.2333%" y="315.50"></text></g><g><title>private_context.nr:244:64::self.next_counter (3 gates, 0.01%)</title><rect x="99.9833%" y="277" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29998" fg:w="3"/><text x="100.2333%" y="291.50"></text></g><g><title>private_context.nr:582:9::self.side_effect_counter += 1 (3 gates, 0.01%)</title><rect x="99.9833%" y="253" width="0.0100%" height="23" fill="rgb(255,248,248)" fg:x="29998" fg:w="3"/><text x="100.2333%" y="267.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="99.9867%" y="229" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="29999" fg:w="2"/><text x="100.2367%" y="243.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="99.9933%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="30001" fg:w="1"/><text x="100.2433%" y="291.50"></text></g><g><title>all (30,003 gates, 100%)</title><rect x="0.0000%" y="349" width="100.0000%" height="23" fill="rgb(255,100,100)" fg:x="0" fg:w="30003"/><text x="0.2500%" y="363.50"></text></g><g><title>main.nr:49:1::        se (328 gates, 1.09%)</title><rect x="98.9068%" y="325" width="1.0932%" height="23" fill="rgb(255,234,234)" fg:x="29675" fg:w="328"/><text x="99.1568%" y="339.50"></text></g><g><title>private_context.nr:94:34::inputs.start_side_effect_counter + 1 (2 gates, 0.01%)</title><rect x="99.9933%" y="301" width="0.0067%" height="23" fill="rgb(255,248,248)" fg:x="30001" fg:w="2"/><text x="100.2433%" y="315.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="99.9967%" y="277" width="0.0033%" height="23" fill="rgb(255,249,249)" fg:x="30002" fg:w="1"/><text x="100.2467%" y="291.50"></text></g></svg></svg>