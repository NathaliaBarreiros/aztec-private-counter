<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="526" onload="init(evt)" viewBox="0 0 1200 526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = true;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="526" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/tmp/counter-Counter-increment.json-main</text><text id="details" fill="rgb(0,0,0)" x="10" y="509.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="509.00"> </text><svg id="frames" x="10" width="1180" total_samples="29091"><g><title>acir::arithmetic (722 gates, 2.48%)</title><rect x="0.0000%" y="445" width="2.4819%" height="23" fill="rgb(255,226,226)" fg:x="0" fg:w="722"/><text x="0.2500%" y="459.50">ac..</text></g><g><title>acir::blackbox::range (2,973 gates, 10.22%)</title><rect x="2.4819%" y="445" width="10.2197%" height="23" fill="rgb(255,202,202)" fg:x="722" fg:w="2973"/><text x="2.7319%" y="459.50">acir::blackbox:..</text></g><g><title>acir::memory::init (1,466 gates, 5.04%)</title><rect x="12.7015%" y="445" width="5.0394%" height="23" fill="rgb(255,216,216)" fg:x="3695" fg:w="1466"/><text x="12.9515%" y="459.50">acir::..</text></g><g><title>ephemeral.nr:28:18::fr_to_fq_unsafe(randomness) (1 gates, 0.00%)</title><rect x="17.7409%" y="325" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5161" fg:w="1"/><text x="17.9909%" y="339.50"></text></g><g><title>mod.nr:102:15::scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi (1 gates, 0.00%)</title><rect x="17.7409%" y="301" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5161" fg:w="1"/><text x="17.9909%" y="315.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="17.7409%" y="277" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5161" fg:w="1"/><text x="17.9909%" y="291.50"></text></g><g><title>note.nr:266:28::generate_ephemeral_key_pair() (606 gates, 2.08%)</title><rect x="17.7409%" y="349" width="2.0831%" height="23" fill="rgb(255,228,228)" fg:x="5161" fg:w="606"/><text x="17.9909%" y="363.50">n..</text></g><g><title>ephemeral.nr:29:18::fixed_base_scalar_mul(eph_sk) (605 gates, 2.08%)</title><rect x="17.7443%" y="325" width="2.0797%" height="23" fill="rgb(255,228,228)" fg:x="5162" fg:w="605"/><text x="17.9943%" y="339.50">e..</text></g><g><title>embedded_curve_ops.nr:129:5::multi_scalar_mul([g1], [scalar]) (605 gates, 2.08%)</title><rect x="17.7443%" y="301" width="2.0797%" height="23" fill="rgb(255,228,228)" fg:x="5162" fg:w="605"/><text x="17.9943%" y="315.50">e..</text></g><g><title>embedded_curve_ops.nr:110:23::multi_scalar_mul_array_return(points, scalars) (605 gates, 2.08%)</title><rect x="17.7443%" y="277" width="2.0797%" height="23" fill="rgb(255,228,228)" fg:x="5162" fg:w="605"/><text x="17.9943%" y="291.50">e..</text></g><g><title>acir::blackbox::multi_scalar_mul (605 gates, 2.08%)</title><rect x="17.7443%" y="253" width="2.0797%" height="23" fill="rgb(255,228,228)" fg:x="5162" fg:w="605"/><text x="17.9943%" y="267.50">a..</text></g><g><title>bn254.nr:105:15::a == b (2 gates, 0.01%)</title><rect x="19.8240%" y="253" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5767" fg:w="2"/><text x="20.0740%" y="267.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="19.8240%" y="229" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5767" fg:w="2"/><text x="20.0740%" y="243.50"></text></g><g><title>bn254.nr:110:16::field_less_than(a, b) (1 gates, 0.00%)</title><rect x="19.8309%" y="253" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5769" fg:w="1"/><text x="20.0809%" y="267.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="19.8309%" y="229" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5769" fg:w="1"/><text x="20.0809%" y="243.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="19.8343%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5770" fg:w="1"/><text x="20.0843%" y="171.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (11 gates, 0.04%)</title><rect x="19.8343%" y="205" width="0.0378%" height="23" fill="rgb(255,247,247)" fg:x="5770" fg:w="11"/><text x="20.0843%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (11 gates, 0.04%)</title><rect x="19.8343%" y="181" width="0.0378%" height="23" fill="rgb(255,247,247)" fg:x="5770" fg:w="11"/><text x="20.0843%" y="195.50"></text></g><g><title>acir::blackbox::range (10 gates, 0.03%)</title><rect x="19.8378%" y="157" width="0.0344%" height="23" fill="rgb(255,247,247)" fg:x="5771" fg:w="10"/><text x="20.0878%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="19.8721%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5781" fg:w="1"/><text x="20.1221%" y="171.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (19 gates, 0.07%)</title><rect x="19.8343%" y="229" width="0.0653%" height="23" fill="rgb(255,246,246)" fg:x="5770" fg:w="19"/><text x="20.0843%" y="243.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="19.8721%" y="205" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5781" fg:w="8"/><text x="20.1221%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="19.8721%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5781" fg:w="8"/><text x="20.1221%" y="195.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="19.8756%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5782" fg:w="7"/><text x="20.1256%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="19.8996%" y="157" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5789" fg:w="2"/><text x="20.1496%" y="171.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="19.8996%" y="205" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5789" fg:w="8"/><text x="20.1496%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="19.8996%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5789" fg:w="8"/><text x="20.1496%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="19.9065%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5791" fg:w="6"/><text x="20.1565%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="19.9271%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5797" fg:w="1"/><text x="20.1771%" y="171.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="19.9271%" y="205" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5797" fg:w="7"/><text x="20.1771%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="19.9271%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5797" fg:w="7"/><text x="20.1771%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="19.9306%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5798" fg:w="6"/><text x="20.1806%" y="171.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="19.9512%" y="205" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="5804" fg:w="3"/><text x="20.2012%" y="219.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="19.9512%" y="181" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="5804" fg:w="3"/><text x="20.2012%" y="195.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="19.9615%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5807" fg:w="1"/><text x="20.2115%" y="195.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="19.9615%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5807" fg:w="1"/><text x="20.2115%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="19.9649%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5808" fg:w="2"/><text x="20.2149%" y="147.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="19.9649%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5808" fg:w="8"/><text x="20.2149%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="19.9649%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5808" fg:w="8"/><text x="20.2149%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="19.9718%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5810" fg:w="6"/><text x="20.2218%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="19.9924%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5816" fg:w="1"/><text x="20.2424%" y="147.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (36 gates, 0.12%)</title><rect x="19.8996%" y="229" width="0.1237%" height="23" fill="rgb(255,244,244)" fg:x="5789" fg:w="36"/><text x="20.1496%" y="243.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (18 gates, 0.06%)</title><rect x="19.9615%" y="205" width="0.0619%" height="23" fill="rgb(255,246,246)" fg:x="5807" fg:w="18"/><text x="20.2115%" y="219.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="19.9924%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="5816" fg:w="9"/><text x="20.2424%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="19.9924%" y="157" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="5816" fg:w="9"/><text x="20.2424%" y="171.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="19.9959%" y="133" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5817" fg:w="8"/><text x="20.2459%" y="147.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="20.0234%" y="205" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5825" fg:w="1"/><text x="20.2734%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="20.0234%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5825" fg:w="1"/><text x="20.2734%" y="195.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="20.0268%" y="157" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5826" fg:w="2"/><text x="20.2768%" y="171.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.0268%" y="205" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5826" fg:w="8"/><text x="20.2768%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.0268%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5826" fg:w="8"/><text x="20.2768%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.0337%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5828" fg:w="6"/><text x="20.2837%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.0543%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5834" fg:w="1"/><text x="20.3043%" y="171.50"></text></g><g><title>bn254.nr:111:17::assert_gt(b, a) (71 gates, 0.24%)</title><rect x="19.8343%" y="253" width="0.2441%" height="23" fill="rgb(255,242,242)" fg:x="5770" fg:w="71"/><text x="20.0843%" y="267.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="20.0234%" y="229" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="5825" fg:w="16"/><text x="20.2734%" y="243.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.0543%" y="205" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5834" fg:w="7"/><text x="20.3043%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.0543%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5834" fg:w="7"/><text x="20.3043%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.0577%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5835" fg:w="6"/><text x="20.3077%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="20.0784%" y="157" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5841" fg:w="2"/><text x="20.3284%" y="171.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.0784%" y="205" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5841" fg:w="8"/><text x="20.3284%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.0784%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5841" fg:w="8"/><text x="20.3284%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.0852%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5843" fg:w="6"/><text x="20.3352%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.1059%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5849" fg:w="1"/><text x="20.3559%" y="171.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="20.1059%" y="205" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="5849" fg:w="9"/><text x="20.3559%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="20.1059%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="5849" fg:w="9"/><text x="20.3559%" y="195.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="20.1093%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5850" fg:w="8"/><text x="20.3593%" y="171.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="20.1368%" y="205" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="5858" fg:w="3"/><text x="20.3868%" y="219.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="20.1368%" y="181" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="5858" fg:w="3"/><text x="20.3868%" y="195.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="20.1471%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5861" fg:w="1"/><text x="20.3971%" y="195.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="20.1471%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5861" fg:w="1"/><text x="20.3971%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="20.1506%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5862" fg:w="2"/><text x="20.4006%" y="147.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.1506%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5862" fg:w="8"/><text x="20.4006%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.1506%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5862" fg:w="8"/><text x="20.4006%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.1574%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5864" fg:w="6"/><text x="20.4074%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.1781%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5870" fg:w="1"/><text x="20.4281%" y="147.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (36 gates, 0.12%)</title><rect x="20.0784%" y="229" width="0.1237%" height="23" fill="rgb(255,244,244)" fg:x="5841" fg:w="36"/><text x="20.3284%" y="243.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (16 gates, 0.05%)</title><rect x="20.1471%" y="205" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="5861" fg:w="16"/><text x="20.3971%" y="219.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.1781%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5870" fg:w="7"/><text x="20.4281%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.1781%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5870" fg:w="7"/><text x="20.4281%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.1815%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5871" fg:w="6"/><text x="20.4315%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.2021%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5877" fg:w="1"/><text x="20.4521%" y="171.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.2021%" y="205" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5877" fg:w="7"/><text x="20.4521%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.2021%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5877" fg:w="7"/><text x="20.4521%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.2056%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5878" fg:w="6"/><text x="20.4556%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.2262%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5884" fg:w="1"/><text x="20.4762%" y="171.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (16 gates, 0.05%)</title><rect x="20.2021%" y="229" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="5877" fg:w="16"/><text x="20.4521%" y="243.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="20.2262%" y="205" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="5884" fg:w="9"/><text x="20.4762%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="20.2262%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="5884" fg:w="9"/><text x="20.4762%" y="195.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="20.2296%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5885" fg:w="8"/><text x="20.4796%" y="171.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="20.2571%" y="205" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5893" fg:w="1"/><text x="20.5071%" y="219.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="20.2571%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5893" fg:w="1"/><text x="20.5071%" y="195.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="20.2606%" y="157" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="5894" fg:w="2"/><text x="20.5106%" y="171.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.2606%" y="205" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5894" fg:w="8"/><text x="20.5106%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="20.2606%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="5894" fg:w="8"/><text x="20.5106%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.2674%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5896" fg:w="6"/><text x="20.5174%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.2881%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5902" fg:w="1"/><text x="20.5381%" y="171.50"></text></g><g><title>note.nr:268:32::get_sign_of_point(eph_pk) (142 gates, 0.49%)</title><rect x="19.8240%" y="349" width="0.4881%" height="23" fill="rgb(255,239,239)" fg:x="5767" fg:w="142"/><text x="20.0740%" y="363.50"></text></g><g><title>point.nr:39:6::BN254_FR_MODULUS_DIV_2.lt (142 gates, 0.49%)</title><rect x="19.8240%" y="325" width="0.4881%" height="23" fill="rgb(255,239,239)" fg:x="5767" fg:w="142"/><text x="20.0740%" y="339.50"></text></g><g><title>mod.nr:240:13::bn254_lt(self, another) (142 gates, 0.49%)</title><rect x="19.8240%" y="301" width="0.4881%" height="23" fill="rgb(255,239,239)" fg:x="5767" fg:w="142"/><text x="20.0740%" y="315.50"></text></g><g><title>bn254.nr:122:5::gt(b, a) (142 gates, 0.49%)</title><rect x="19.8240%" y="277" width="0.4881%" height="23" fill="rgb(255,239,239)" fg:x="5767" fg:w="142"/><text x="20.0740%" y="291.50"></text></g><g><title>bn254.nr:114:17::assert_gt(a, b) (68 gates, 0.23%)</title><rect x="20.0784%" y="253" width="0.2337%" height="23" fill="rgb(255,242,242)" fg:x="5841" fg:w="68"/><text x="20.3284%" y="267.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="20.2571%" y="229" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="5893" fg:w="16"/><text x="20.5071%" y="243.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.2881%" y="205" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5902" fg:w="7"/><text x="20.5381%" y="219.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="20.2881%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="5902" fg:w="7"/><text x="20.5381%" y="195.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="20.2915%" y="157" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="5903" fg:w="6"/><text x="20.5415%" y="171.50"></text></g><g><title>aztec_address.nr:90:25::pow(x, 3) (1 gates, 0.00%)</title><rect x="20.3121%" y="301" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5909" fg:w="1"/><text x="20.5621%" y="315.50"></text></g><g><title>lib.nr:167:9::r *= (b[254 - 1 - i] as Field) * x + (1 - b[254 - 1 - i] as Field) (1 gates, 0.00%)</title><rect x="20.3121%" y="277" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5909" fg:w="1"/><text x="20.5621%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="20.3121%" y="253" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="5909" fg:w="1"/><text x="20.5621%" y="267.50"></text></g><g><title>lib.nr:166:9::r *= r (224 gates, 0.77%)</title><rect x="20.3156%" y="253" width="0.7700%" height="23" fill="rgb(255,236,236)" fg:x="5910" fg:w="224"/><text x="20.5656%" y="267.50"></text></g><g><title>acir::arithmetic (224 gates, 0.77%)</title><rect x="20.3156%" y="229" width="0.7700%" height="23" fill="rgb(255,236,236)" fg:x="5910" fg:w="224"/><text x="20.5656%" y="243.50"></text></g><g><title>lib.nr:178:17::pow(x, C3) (322 gates, 1.11%)</title><rect x="20.3156%" y="277" width="1.1069%" height="23" fill="rgb(255,234,234)" fg:x="5910" fg:w="322"/><text x="20.5656%" y="291.50"></text></g><g><title>lib.nr:167:9::r *= (b[254 - 1 - i] as Field) * x + (1 - b[254 - 1 - i] as Field) (98 gates, 0.34%)</title><rect x="21.0856%" y="253" width="0.3369%" height="23" fill="rgb(255,241,241)" fg:x="6134" fg:w="98"/><text x="21.3356%" y="267.50"></text></g><g><title>acir::arithmetic (98 gates, 0.34%)</title><rect x="21.0856%" y="229" width="0.3369%" height="23" fill="rgb(255,241,241)" fg:x="6134" fg:w="98"/><text x="21.3356%" y="243.50"></text></g><g><title>lib.nr:179:17::z * z * x (1 gates, 0.00%)</title><rect x="21.4224%" y="277" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6232" fg:w="1"/><text x="21.6724%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="21.4224%" y="253" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6232" fg:w="1"/><text x="21.6724%" y="267.50"></text></g><g><title>lib.nr:179:17::z * z (1 gates, 0.00%)</title><rect x="21.4259%" y="277" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6233" fg:w="1"/><text x="21.6759%" y="291.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="21.4259%" y="253" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6233" fg:w="1"/><text x="21.6759%" y="267.50"></text></g><g><title>lib.nr:186:13::b *= b (351 gates, 1.21%)</title><rect x="21.4293%" y="277" width="1.2066%" height="23" fill="rgb(255,233,233)" fg:x="6234" fg:w="351"/><text x="21.6793%" y="291.50"></text></g><g><title>acir::arithmetic (351 gates, 1.21%)</title><rect x="21.4293%" y="253" width="1.2066%" height="23" fill="rgb(255,233,233)" fg:x="6234" fg:w="351"/><text x="21.6793%" y="267.50"></text></g><g><title>lib.nr:189:17::b == 1 (81 gates, 0.28%)</title><rect x="22.6359%" y="277" width="0.2784%" height="23" fill="rgb(255,242,242)" fg:x="6585" fg:w="81"/><text x="22.8859%" y="291.50"></text></g><g><title>acir::arithmetic (81 gates, 0.28%)</title><rect x="22.6359%" y="253" width="0.2784%" height="23" fill="rgb(255,242,242)" fg:x="6585" fg:w="81"/><text x="22.8859%" y="267.50"></text></g><g><title>aztec_address.nr:93:21::sqrt(y_squared) (810 gates, 2.78%)</title><rect x="20.3156%" y="301" width="2.7844%" height="23" fill="rgb(255,225,225)" fg:x="5910" fg:w="810"/><text x="20.5656%" y="315.50">az..</text></g><g><title>lib.nr:189:9::z *= if b == 1 { 1 } else { c } (54 gates, 0.19%)</title><rect x="22.9143%" y="277" width="0.1856%" height="23" fill="rgb(255,243,243)" fg:x="6666" fg:w="54"/><text x="23.1643%" y="291.50"></text></g><g><title>acir::arithmetic (54 gates, 0.19%)</title><rect x="22.9143%" y="253" width="0.1856%" height="23" fill="rgb(255,243,243)" fg:x="6666" fg:w="54"/><text x="23.1643%" y="267.50"></text></g><g><title>bn254.nr:105:15::a == b (3 gates, 0.01%)</title><rect x="23.0999%" y="229" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="6720" fg:w="3"/><text x="23.3499%" y="243.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="23.0999%" y="205" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="6720" fg:w="3"/><text x="23.3499%" y="219.50"></text></g><g><title>bn254.nr:110:16::field_less_than(a, b) (1 gates, 0.00%)</title><rect x="23.1102%" y="229" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6723" fg:w="1"/><text x="23.3602%" y="243.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="23.1102%" y="205" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6723" fg:w="1"/><text x="23.3602%" y="219.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.1137%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6724" fg:w="2"/><text x="23.3637%" y="147.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.1137%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6724" fg:w="8"/><text x="23.3637%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.1137%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6724" fg:w="8"/><text x="23.3637%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.1206%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6726" fg:w="6"/><text x="23.3706%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.1412%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6732" fg:w="1"/><text x="23.3912%" y="147.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.1412%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6732" fg:w="9"/><text x="23.3912%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.1412%" y="157" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6732" fg:w="9"/><text x="23.3912%" y="171.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="23.1446%" y="133" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6733" fg:w="8"/><text x="23.3946%" y="147.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (4 gates, 0.01%)</title><rect x="23.1721%" y="181" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="6741" fg:w="4"/><text x="23.4221%" y="195.50"></text></g><g><title>acir::arithmetic (4 gates, 0.01%)</title><rect x="23.1721%" y="157" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="6741" fg:w="4"/><text x="23.4221%" y="171.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="23.1859%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6745" fg:w="1"/><text x="23.4359%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="23.1859%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6745" fg:w="1"/><text x="23.4359%" y="147.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.1893%" y="109" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6746" fg:w="2"/><text x="23.4393%" y="123.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.1893%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6746" fg:w="8"/><text x="23.4393%" y="171.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.1893%" y="133" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6746" fg:w="8"/><text x="23.4393%" y="147.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.1962%" y="109" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6748" fg:w="6"/><text x="23.4462%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.2168%" y="109" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6754" fg:w="1"/><text x="23.4668%" y="123.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (37 gates, 0.13%)</title><rect x="23.1137%" y="205" width="0.1272%" height="23" fill="rgb(255,244,244)" fg:x="6724" fg:w="37"/><text x="23.3637%" y="219.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (16 gates, 0.05%)</title><rect x="23.1859%" y="181" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="6745" fg:w="16"/><text x="23.4359%" y="195.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.2168%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6754" fg:w="7"/><text x="23.4668%" y="171.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.2168%" y="133" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6754" fg:w="7"/><text x="23.4668%" y="147.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.2202%" y="109" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6755" fg:w="6"/><text x="23.4702%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.2409%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6761" fg:w="1"/><text x="23.4909%" y="147.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.2409%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6761" fg:w="7"/><text x="23.4909%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.2409%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6761" fg:w="7"/><text x="23.4909%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.2443%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6762" fg:w="6"/><text x="23.4943%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.2649%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6768" fg:w="1"/><text x="23.5149%" y="147.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (16 gates, 0.05%)</title><rect x="23.2409%" y="205" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="6761" fg:w="16"/><text x="23.4909%" y="219.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.2649%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6768" fg:w="9"/><text x="23.5149%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.2649%" y="157" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6768" fg:w="9"/><text x="23.5149%" y="171.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="23.2684%" y="133" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6769" fg:w="8"/><text x="23.5184%" y="147.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="23.2959%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6777" fg:w="1"/><text x="23.5459%" y="195.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="23.2959%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6777" fg:w="1"/><text x="23.5459%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.2993%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6778" fg:w="2"/><text x="23.5493%" y="147.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.2993%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6778" fg:w="8"/><text x="23.5493%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.2993%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6778" fg:w="8"/><text x="23.5493%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.3062%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6780" fg:w="6"/><text x="23.5562%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.3268%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6786" fg:w="1"/><text x="23.5768%" y="147.50"></text></g><g><title>bn254.nr:111:17::assert_gt(b, a) (69 gates, 0.24%)</title><rect x="23.1137%" y="229" width="0.2372%" height="23" fill="rgb(255,242,242)" fg:x="6724" fg:w="69"/><text x="23.3637%" y="243.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="23.2959%" y="205" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="6777" fg:w="16"/><text x="23.5459%" y="219.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.3268%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6786" fg:w="7"/><text x="23.5768%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.3268%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6786" fg:w="7"/><text x="23.5768%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.3302%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6787" fg:w="6"/><text x="23.5802%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.3509%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6793" fg:w="1"/><text x="23.6009%" y="147.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.3509%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6793" fg:w="7"/><text x="23.6009%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.3509%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6793" fg:w="7"/><text x="23.6009%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.3543%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6794" fg:w="6"/><text x="23.6043%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.3749%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6800" fg:w="1"/><text x="23.6249%" y="147.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (16 gates, 0.05%)</title><rect x="23.3509%" y="205" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="6793" fg:w="16"/><text x="23.6009%" y="219.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.3749%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6800" fg:w="9"/><text x="23.6249%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.3749%" y="157" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6800" fg:w="9"/><text x="23.6249%" y="171.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="23.3784%" y="133" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6801" fg:w="8"/><text x="23.6284%" y="147.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.4059%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6809" fg:w="2"/><text x="23.6559%" y="147.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.4059%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6809" fg:w="8"/><text x="23.6559%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.4059%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6809" fg:w="8"/><text x="23.6559%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.4127%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6811" fg:w="6"/><text x="23.6627%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.4334%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6817" fg:w="1"/><text x="23.6834%" y="147.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.4334%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6817" fg:w="7"/><text x="23.6834%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.4334%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6817" fg:w="7"/><text x="23.6834%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.4368%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6818" fg:w="6"/><text x="23.6868%" y="147.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="23.4574%" y="181" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="6824" fg:w="3"/><text x="23.7074%" y="195.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="23.4574%" y="157" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="6824" fg:w="3"/><text x="23.7074%" y="171.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="23.4677%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6827" fg:w="1"/><text x="23.7177%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="23.4677%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6827" fg:w="1"/><text x="23.7177%" y="147.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.4712%" y="109" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6828" fg:w="2"/><text x="23.7212%" y="123.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.4712%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6828" fg:w="8"/><text x="23.7212%" y="171.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.4712%" y="133" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6828" fg:w="8"/><text x="23.7212%" y="147.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.4781%" y="109" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6830" fg:w="6"/><text x="23.7281%" y="123.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.4987%" y="109" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6836" fg:w="1"/><text x="23.7487%" y="123.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (36 gates, 0.12%)</title><rect x="23.4059%" y="205" width="0.1237%" height="23" fill="rgb(255,244,244)" fg:x="6809" fg:w="36"/><text x="23.6559%" y="219.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (18 gates, 0.06%)</title><rect x="23.4677%" y="181" width="0.0619%" height="23" fill="rgb(255,246,246)" fg:x="6827" fg:w="18"/><text x="23.7177%" y="195.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.4987%" y="157" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6836" fg:w="9"/><text x="23.7487%" y="171.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="23.4987%" y="133" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="6836" fg:w="9"/><text x="23.7487%" y="147.50"></text></g><g><title>acir::blackbox::range (8 gates, 0.03%)</title><rect x="23.5021%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6837" fg:w="8"/><text x="23.7521%" y="123.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="23.5296%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6845" fg:w="1"/><text x="23.7796%" y="195.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="23.5296%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6845" fg:w="1"/><text x="23.7796%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.5331%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6846" fg:w="2"/><text x="23.7831%" y="147.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.5331%" y="181" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6846" fg:w="8"/><text x="23.7831%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="23.5331%" y="157" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="6846" fg:w="8"/><text x="23.7831%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.5399%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6848" fg:w="6"/><text x="23.7899%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="23.5606%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="6854" fg:w="1"/><text x="23.8106%" y="147.50"></text></g><g><title>aztec_address.nr:98:15::y.lt (141 gates, 0.48%)</title><rect x="23.0999%" y="301" width="0.4847%" height="23" fill="rgb(255,239,239)" fg:x="6720" fg:w="141"/><text x="23.3499%" y="315.50"></text></g><g><title>mod.nr:240:13::bn254_lt(self, another) (141 gates, 0.48%)</title><rect x="23.0999%" y="277" width="0.4847%" height="23" fill="rgb(255,239,239)" fg:x="6720" fg:w="141"/><text x="23.3499%" y="291.50"></text></g><g><title>bn254.nr:122:5::gt(b, a) (141 gates, 0.48%)</title><rect x="23.0999%" y="253" width="0.4847%" height="23" fill="rgb(255,239,239)" fg:x="6720" fg:w="141"/><text x="23.3499%" y="267.50"></text></g><g><title>bn254.nr:114:17::assert_gt(a, b) (68 gates, 0.23%)</title><rect x="23.3509%" y="229" width="0.2337%" height="23" fill="rgb(255,242,242)" fg:x="6793" fg:w="68"/><text x="23.6009%" y="243.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (16 gates, 0.05%)</title><rect x="23.5296%" y="205" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="6845" fg:w="16"/><text x="23.7796%" y="219.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.5606%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6854" fg:w="7"/><text x="23.8106%" y="195.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="23.5606%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="6854" fg:w="7"/><text x="23.8106%" y="171.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="23.5640%" y="133" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="6855" fg:w="6"/><text x="23.8140%" y="147.50"></text></g><g><title>aztec_address.nr:98:43::y.eq (2 gates, 0.01%)</title><rect x="23.5846%" y="301" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6861" fg:w="2"/><text x="23.8346%" y="315.50"></text></g><g><title>cmp.nr:34:9::self == other (2 gates, 0.01%)</title><rect x="23.5846%" y="277" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6861" fg:w="2"/><text x="23.8346%" y="291.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="23.5846%" y="253" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="6861" fg:w="2"/><text x="23.8346%" y="267.50"></text></g><g><title>ecdh_shared_secret.nr:27:49::recipient_address.to_address_point (957 gates, 3.29%)</title><rect x="20.3121%" y="325" width="3.2897%" height="23" fill="rgb(255,222,222)" fg:x="5909" fg:w="957"/><text x="20.5621%" y="339.50">ecd..</text></g><g><title>aztec_address.nr:99:17::(MAX_FIELD_VALUE + 1) - y (3 gates, 0.01%)</title><rect x="23.5915%" y="301" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="6863" fg:w="3"/><text x="23.8415%" y="315.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="23.5915%" y="277" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="6863" fg:w="3"/><text x="23.8415%" y="291.50"></text></g><g><title>embedded_curve_ops.nr:110:23::multi_scalar_mul_array_return(points, scalars) (757 gates, 2.60%)</title><rect x="23.6018%" y="277" width="2.6022%" height="23" fill="rgb(255,225,225)" fg:x="6866" fg:w="757"/><text x="23.8518%" y="291.50">em..</text></g><g><title>acir::blackbox::multi_scalar_mul (757 gates, 2.60%)</title><rect x="23.6018%" y="253" width="2.6022%" height="23" fill="rgb(255,225,225)" fg:x="6866" fg:w="757"/><text x="23.8518%" y="267.50">ac..</text></g><g><title>acir::arithmetic (4 gates, 0.01%)</title><rect x="26.2040%" y="253" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="7623" fg:w="4"/><text x="26.4540%" y="267.50"></text></g><g><title>note.nr:270:36::derive_ecdh_shared_secret_using_aztec_address(eph_sk, recipient) (1,734 gates, 5.96%)</title><rect x="20.3121%" y="349" width="5.9606%" height="23" fill="rgb(255,213,213)" fg:x="5909" fg:w="1734"/><text x="20.5621%" y="363.50">note.nr:..</text></g><g><title>ecdh_shared_secret.nr:27:5::derive_ecdh_shared_secret(ephemeral_secret, recipient_address.to_address_point().inner) (777 gates, 2.67%)</title><rect x="23.6018%" y="325" width="2.6709%" height="23" fill="rgb(255,225,225)" fg:x="6866" fg:w="777"/><text x="23.8518%" y="339.50">ec..</text></g><g><title>ecdh_shared_secret.nr:15:25::multi_scalar_mul([public_key], [secret]) (777 gates, 2.67%)</title><rect x="23.6018%" y="301" width="2.6709%" height="23" fill="rgb(255,225,225)" fg:x="6866" fg:w="777"/><text x="23.8518%" y="315.50">ec..</text></g><g><title>embedded_curve_ops.nr:111:77::point_array[2] as bool (20 gates, 0.07%)</title><rect x="26.2040%" y="277" width="0.0687%" height="23" fill="rgb(255,246,246)" fg:x="7623" fg:w="20"/><text x="26.4540%" y="291.50"></text></g><g><title>acir::blackbox::range (16 gates, 0.05%)</title><rect x="26.2177%" y="253" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="7627" fg:w="16"/><text x="26.4677%" y="267.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.14%)</title><rect x="26.2727%" y="301" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="7643" fg:w="40"/><text x="26.5227%" y="315.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.14%)</title><rect x="26.2727%" y="277" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="7643" fg:w="40"/><text x="26.5227%" y="291.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.14%)</title><rect x="26.2727%" y="253" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="7643" fg:w="40"/><text x="26.5227%" y="267.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.43%)</title><rect x="26.4102%" y="301" width="0.4262%" height="23" fill="rgb(255,240,240)" fg:x="7683" fg:w="124"/><text x="26.6602%" y="315.50"></text></g><g><title>acir::arithmetic (124 gates, 0.43%)</title><rect x="26.4102%" y="277" width="0.4262%" height="23" fill="rgb(255,240,240)" fg:x="7683" fg:w="124"/><text x="26.6602%" y="291.50"></text></g><g><title>acir::arithmetic (174 gates, 0.60%)</title><rect x="26.8365%" y="277" width="0.5981%" height="23" fill="rgb(255,238,238)" fg:x="7807" fg:w="174"/><text x="27.0865%" y="291.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (240 gates, 0.82%)</title><rect x="26.8365%" y="301" width="0.8250%" height="23" fill="rgb(255,236,236)" fg:x="7807" fg:w="240"/><text x="27.0865%" y="315.50"></text></g><g><title>acir::blackbox::range (66 gates, 0.23%)</title><rect x="27.4346%" y="277" width="0.2269%" height="23" fill="rgb(255,242,242)" fg:x="7981" fg:w="66"/><text x="27.6846%" y="291.50"></text></g><g><title>note.nr:230:40::storage_slot.to_be_bytes (405 gates, 1.39%)</title><rect x="26.2727%" y="325" width="1.3922%" height="23" fill="rgb(255,232,232)" fg:x="7643" fg:w="405"/><text x="26.5227%" y="339.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="27.6615%" y="301" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="8047" fg:w="1"/><text x="27.9115%" y="315.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="27.6615%" y="277" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="8047" fg:w="1"/><text x="27.9115%" y="291.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (80 gates, 0.27%)</title><rect x="27.6649%" y="301" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="8048" fg:w="80"/><text x="27.9149%" y="315.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (80 gates, 0.27%)</title><rect x="27.6649%" y="277" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="8048" fg:w="80"/><text x="27.9149%" y="291.50"></text></g><g><title>acir::blackbox::range (80 gates, 0.27%)</title><rect x="27.6649%" y="253" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="8048" fg:w="80"/><text x="27.9149%" y="267.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (248 gates, 0.85%)</title><rect x="27.9399%" y="301" width="0.8525%" height="23" fill="rgb(255,236,236)" fg:x="8128" fg:w="248"/><text x="28.1899%" y="315.50"></text></g><g><title>acir::arithmetic (248 gates, 0.85%)</title><rect x="27.9399%" y="277" width="0.8525%" height="23" fill="rgb(255,236,236)" fg:x="8128" fg:w="248"/><text x="28.1899%" y="291.50"></text></g><g><title>acir::arithmetic (348 gates, 1.20%)</title><rect x="28.7924%" y="277" width="1.1962%" height="23" fill="rgb(255,233,233)" fg:x="8376" fg:w="348"/><text x="29.0424%" y="291.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (478 gates, 1.64%)</title><rect x="28.7924%" y="301" width="1.6431%" height="23" fill="rgb(255,230,230)" fg:x="8376" fg:w="478"/><text x="29.0424%" y="315.50"></text></g><g><title>acir::blackbox::range (130 gates, 0.45%)</title><rect x="29.9887%" y="277" width="0.4469%" height="23" fill="rgb(255,240,240)" fg:x="8724" fg:w="130"/><text x="30.2387%" y="291.50"></text></g><g><title>note.nr:278:33::compute_note_plaintext_for_this_strategy(note, storage_slot) (1,213 gates, 4.17%)</title><rect x="26.2727%" y="349" width="4.1697%" height="23" fill="rgb(255,219,219)" fg:x="7643" fg:w="1213"/><text x="26.5227%" y="363.50">note...</text></g><g><title>note.nr:243:31::packed_note[i].to_be_bytes (808 gates, 2.78%)</title><rect x="27.6649%" y="325" width="2.7775%" height="23" fill="rgb(255,225,225)" fg:x="8048" fg:w="808"/><text x="27.9149%" y="339.50">no..</text></g><g><title>mod.nr:184:20::ok (2 gates, 0.01%)</title><rect x="30.4355%" y="301" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="8854" fg:w="2"/><text x="30.6855%" y="315.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="30.4355%" y="277" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="8854" fg:w="2"/><text x="30.6855%" y="291.50"></text></g><g><title>point.nr:16:12::!p.is_infinite (1 gates, 0.00%)</title><rect x="30.4424%" y="253" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="8856" fg:w="1"/><text x="30.6924%" y="267.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="30.4424%" y="229" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="8856" fg:w="1"/><text x="30.6924%" y="243.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.14%)</title><rect x="30.4458%" y="181" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="8857" fg:w="40"/><text x="30.6958%" y="195.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (46 gates, 0.16%)</title><rect x="30.4458%" y="229" width="0.1581%" height="23" fill="rgb(255,244,244)" fg:x="8857" fg:w="46"/><text x="30.6958%" y="243.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (46 gates, 0.16%)</title><rect x="30.4458%" y="205" width="0.1581%" height="23" fill="rgb(255,244,244)" fg:x="8857" fg:w="46"/><text x="30.6958%" y="219.50"></text></g><g><title>acir::memory::init (6 gates, 0.02%)</title><rect x="30.5833%" y="181" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="8897" fg:w="6"/><text x="30.8333%" y="195.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.43%)</title><rect x="30.6040%" y="229" width="0.4262%" height="23" fill="rgb(255,240,240)" fg:x="8903" fg:w="124"/><text x="30.8540%" y="243.50"></text></g><g><title>acir::arithmetic (124 gates, 0.43%)</title><rect x="30.6040%" y="205" width="0.4262%" height="23" fill="rgb(255,240,240)" fg:x="8903" fg:w="124"/><text x="30.8540%" y="219.50"></text></g><g><title>acir::arithmetic (174 gates, 0.60%)</title><rect x="31.0302%" y="205" width="0.5981%" height="23" fill="rgb(255,238,238)" fg:x="9027" fg:w="174"/><text x="31.2802%" y="219.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.82%)</title><rect x="31.0302%" y="229" width="0.8216%" height="23" fill="rgb(255,236,236)" fg:x="9027" fg:w="239"/><text x="31.2802%" y="243.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="31.6283%" y="205" width="0.2234%" height="23" fill="rgb(255,242,242)" fg:x="9201" fg:w="65"/><text x="31.8783%" y="219.50"></text></g><g><title>point.nr:18:32::p.x.to_be_bytes (410 gates, 1.41%)</title><rect x="30.4458%" y="253" width="1.4094%" height="23" fill="rgb(255,232,232)" fg:x="8857" fg:w="410"/><text x="30.6958%" y="267.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="31.8518%" y="229" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9266" fg:w="1"/><text x="32.1018%" y="243.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="31.8518%" y="205" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9266" fg:w="1"/><text x="32.1018%" y="219.50"></text></g><g><title>bn254.nr:105:15::a == b (2 gates, 0.01%)</title><rect x="31.8552%" y="157" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9267" fg:w="2"/><text x="32.1052%" y="171.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="31.8552%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9267" fg:w="2"/><text x="32.1052%" y="147.50"></text></g><g><title>bn254.nr:110:16::field_less_than(a, b) (1 gates, 0.00%)</title><rect x="31.8621%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9269" fg:w="1"/><text x="32.1121%" y="171.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="31.8621%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9269" fg:w="1"/><text x="32.1121%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="31.8655%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9270" fg:w="1"/><text x="32.1155%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="31.8655%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9270" fg:w="8"/><text x="32.1155%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="31.8655%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9270" fg:w="8"/><text x="32.1155%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="31.8690%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9271" fg:w="7"/><text x="32.1190%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="31.8930%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9278" fg:w="1"/><text x="32.1430%" y="75.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (15 gates, 0.05%)</title><rect x="31.8655%" y="133" width="0.0516%" height="23" fill="rgb(255,246,246)" fg:x="9270" fg:w="15"/><text x="32.1155%" y="147.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="31.8930%" y="109" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9278" fg:w="7"/><text x="32.1430%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="31.8930%" y="85" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9278" fg:w="7"/><text x="32.1430%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="31.8965%" y="61" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9279" fg:w="6"/><text x="32.1465%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="31.9171%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9285" fg:w="2"/><text x="32.1671%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="31.9171%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9285" fg:w="8"/><text x="32.1671%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="31.9171%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9285" fg:w="8"/><text x="32.1671%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="31.9240%" y="61" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9287" fg:w="6"/><text x="32.1740%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="31.9446%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9293" fg:w="1"/><text x="32.1946%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="31.9446%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9293" fg:w="8"/><text x="32.1946%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="31.9446%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9293" fg:w="8"/><text x="32.1946%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="31.9480%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9294" fg:w="7"/><text x="32.1980%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="31.9721%" y="109" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9301" fg:w="3"/><text x="32.2221%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="31.9721%" y="85" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9301" fg:w="3"/><text x="32.2221%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="31.9824%" y="85" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9304" fg:w="1"/><text x="32.2324%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="31.9824%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9304" fg:w="1"/><text x="32.2324%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="31.9858%" y="37" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9305" fg:w="2"/><text x="32.2358%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="31.9858%" y="85" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="9305" fg:w="9"/><text x="32.2358%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="31.9858%" y="61" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="9305" fg:w="9"/><text x="32.2358%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="31.9927%" y="37" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9307" fg:w="7"/><text x="32.2427%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.0168%" y="37" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9314" fg:w="1"/><text x="32.2668%" y="51.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (36 gates, 0.12%)</title><rect x="31.9171%" y="133" width="0.1237%" height="23" fill="rgb(255,244,244)" fg:x="9285" fg:w="36"/><text x="32.1671%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="31.9824%" y="109" width="0.0584%" height="23" fill="rgb(255,246,246)" fg:x="9304" fg:w="17"/><text x="32.2324%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="32.0168%" y="85" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9314" fg:w="7"/><text x="32.2668%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="32.0168%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9314" fg:w="7"/><text x="32.2668%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="32.0202%" y="37" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9315" fg:w="6"/><text x="32.2702%" y="51.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="32.0408%" y="109" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9321" fg:w="1"/><text x="32.2908%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="32.0408%" y="85" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9321" fg:w="1"/><text x="32.2908%" y="99.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="32.0443%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9322" fg:w="2"/><text x="32.2943%" y="75.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.0443%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9322" fg:w="8"/><text x="32.2943%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.0443%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9322" fg:w="8"/><text x="32.2943%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="32.0511%" y="61" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9324" fg:w="6"/><text x="32.3011%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.0718%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9330" fg:w="1"/><text x="32.3218%" y="75.50"></text></g><g><title>bn254.nr:111:17::assert_gt(b, a) (68 gates, 0.23%)</title><rect x="31.8655%" y="157" width="0.2337%" height="23" fill="rgb(255,242,242)" fg:x="9270" fg:w="68"/><text x="32.1155%" y="171.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (17 gates, 0.06%)</title><rect x="32.0408%" y="133" width="0.0584%" height="23" fill="rgb(255,246,246)" fg:x="9321" fg:w="17"/><text x="32.2908%" y="147.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.0718%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9330" fg:w="8"/><text x="32.3218%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.0718%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9330" fg:w="8"/><text x="32.3218%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="32.0752%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9331" fg:w="7"/><text x="32.3252%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="32.0993%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9338" fg:w="2"/><text x="32.3493%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (9 gates, 0.03%)</title><rect x="32.0993%" y="109" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="9338" fg:w="9"/><text x="32.3493%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (9 gates, 0.03%)</title><rect x="32.0993%" y="85" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="9338" fg:w="9"/><text x="32.3493%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="32.1061%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9340" fg:w="7"/><text x="32.3561%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.1302%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9347" fg:w="1"/><text x="32.3802%" y="75.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="32.1302%" y="109" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9347" fg:w="7"/><text x="32.3802%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="32.1302%" y="85" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9347" fg:w="7"/><text x="32.3802%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="32.1336%" y="61" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9348" fg:w="6"/><text x="32.3836%" y="75.50"></text></g><g><title>bn254.nr:70:23::x, xlo + TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="32.1543%" y="109" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9354" fg:w="3"/><text x="32.4043%" y="123.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="32.1543%" y="85" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9354" fg:w="3"/><text x="32.4043%" y="99.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="32.1646%" y="85" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9357" fg:w="1"/><text x="32.4146%" y="99.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="32.1646%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9357" fg:w="1"/><text x="32.4146%" y="75.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="32.1680%" y="37" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9358" fg:w="2"/><text x="32.4180%" y="51.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.1680%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9358" fg:w="8"/><text x="32.4180%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.1680%" y="61" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9358" fg:w="8"/><text x="32.4180%" y="75.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="32.1749%" y="37" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9360" fg:w="6"/><text x="32.4249%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.1955%" y="37" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9366" fg:w="1"/><text x="32.4455%" y="51.50"></text></g><g><title>bn254.nr:87:23::decompose(a) (36 gates, 0.12%)</title><rect x="32.0993%" y="133" width="0.1237%" height="23" fill="rgb(255,244,244)" fg:x="9338" fg:w="36"/><text x="32.3493%" y="147.50"></text></g><g><title>bn254.nr:73:13::assert_gt_limbs((PLO, PHI), (xlo, xhi)) (17 gates, 0.06%)</title><rect x="32.1646%" y="109" width="0.0584%" height="23" fill="rgb(255,246,246)" fg:x="9357" fg:w="17"/><text x="32.4146%" y="123.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.1955%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9366" fg:w="8"/><text x="32.4455%" y="99.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.1955%" y="61" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9366" fg:w="8"/><text x="32.4455%" y="75.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="32.1990%" y="37" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9367" fg:w="7"/><text x="32.4490%" y="51.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.2230%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9374" fg:w="1"/><text x="32.4730%" y="75.50"></text></g><g><title>bn254.nr:66:13::xlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.2230%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9374" fg:w="8"/><text x="32.4730%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.2230%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9374" fg:w="8"/><text x="32.4730%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="32.2265%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9375" fg:w="7"/><text x="32.4765%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.2505%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9382" fg:w="1"/><text x="32.5005%" y="75.50"></text></g><g><title>bn254.nr:88:23::decompose(b) (15 gates, 0.05%)</title><rect x="32.2230%" y="133" width="0.0516%" height="23" fill="rgb(255,246,246)" fg:x="9374" fg:w="15"/><text x="32.4730%" y="147.50"></text></g><g><title>bn254.nr:67:13::xhi.assert_max_bit_size (7 gates, 0.02%)</title><rect x="32.2505%" y="109" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9382" fg:w="7"/><text x="32.5005%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (7 gates, 0.02%)</title><rect x="32.2505%" y="85" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9382" fg:w="7"/><text x="32.5005%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="32.2540%" y="61" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9383" fg:w="6"/><text x="32.5040%" y="75.50"></text></g><g><title>bn254.nr:45:22::lte_hint(alo, blo) (1 gates, 0.00%)</title><rect x="32.2746%" y="109" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9389" fg:w="1"/><text x="32.5246%" y="123.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="32.2746%" y="85" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9389" fg:w="1"/><text x="32.5246%" y="99.50"></text></g><g><title>acir::arithmetic (2 gates, 0.01%)</title><rect x="32.2780%" y="61" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9390" fg:w="2"/><text x="32.5280%" y="75.50"></text></g><g><title>bn254.nr:50:9::rlo.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.2780%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9390" fg:w="8"/><text x="32.5280%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.2780%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9390" fg:w="8"/><text x="32.5280%" y="99.50"></text></g><g><title>acir::blackbox::range (6 gates, 0.02%)</title><rect x="32.2849%" y="61" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="9392" fg:w="6"/><text x="32.5349%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.3055%" y="61" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9398" fg:w="1"/><text x="32.5555%" y="75.50"></text></g><g><title>point.nr:20:8::get_sign_of_point(p) (139 gates, 0.48%)</title><rect x="31.8552%" y="253" width="0.4778%" height="23" fill="rgb(255,239,239)" fg:x="9267" fg:w="139"/><text x="32.1052%" y="267.50"></text></g><g><title>point.nr:39:6::BN254_FR_MODULUS_DIV_2.lt (139 gates, 0.48%)</title><rect x="31.8552%" y="229" width="0.4778%" height="23" fill="rgb(255,239,239)" fg:x="9267" fg:w="139"/><text x="32.1052%" y="243.50"></text></g><g><title>mod.nr:240:13::bn254_lt(self, another) (139 gates, 0.48%)</title><rect x="31.8552%" y="205" width="0.4778%" height="23" fill="rgb(255,239,239)" fg:x="9267" fg:w="139"/><text x="32.1052%" y="219.50"></text></g><g><title>bn254.nr:122:5::gt(b, a) (139 gates, 0.48%)</title><rect x="31.8552%" y="181" width="0.4778%" height="23" fill="rgb(255,239,239)" fg:x="9267" fg:w="139"/><text x="32.1052%" y="195.50"></text></g><g><title>bn254.nr:114:17::assert_gt(a, b) (68 gates, 0.23%)</title><rect x="32.0993%" y="157" width="0.2337%" height="23" fill="rgb(255,242,242)" fg:x="9338" fg:w="68"/><text x="32.3493%" y="171.50"></text></g><g><title>bn254.nr:91:9::assert_gt_limbs(a_limbs, b_limbs) (17 gates, 0.06%)</title><rect x="32.2746%" y="133" width="0.0584%" height="23" fill="rgb(255,246,246)" fg:x="9389" fg:w="17"/><text x="32.5246%" y="147.50"></text></g><g><title>bn254.nr:51:9::rhi.assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.3055%" y="109" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9398" fg:w="8"/><text x="32.5555%" y="123.50"></text></g><g><title>mod.nr:17:9::self.__assert_max_bit_size (8 gates, 0.03%)</title><rect x="32.3055%" y="85" width="0.0275%" height="23" fill="rgb(255,247,247)" fg:x="9398" fg:w="8"/><text x="32.5555%" y="99.50"></text></g><g><title>acir::blackbox::range (7 gates, 0.02%)</title><rect x="32.3090%" y="61" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9399" fg:w="7"/><text x="32.5590%" y="75.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="32.3330%" y="229" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9406" fg:w="1"/><text x="32.5830%" y="243.50"></text></g><g><title>point.nr:25:9::result[0] += 128 (3 gates, 0.01%)</title><rect x="32.3330%" y="253" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9406" fg:w="3"/><text x="32.5830%" y="267.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="32.3365%" y="229" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9407" fg:w="2"/><text x="32.5865%" y="243.50"></text></g><g><title>aes128.nr:35:41::point_to_bytes(shared_secret) (577 gates, 1.98%)</title><rect x="30.4424%" y="277" width="1.9834%" height="23" fill="rgb(255,228,228)" fg:x="8856" fg:w="577"/><text x="30.6924%" y="291.50">a..</text></g><g><title>point.nr:25:9::result[0] (24 gates, 0.08%)</title><rect x="32.3433%" y="253" width="0.0825%" height="23" fill="rgb(255,245,245)" fg:x="9409" fg:w="24"/><text x="32.5933%" y="267.50"></text></g><g><title>acir::memory::op (24 gates, 0.08%)</title><rect x="32.3433%" y="229" width="0.0825%" height="23" fill="rgb(255,245,245)" fg:x="9409" fg:w="24"/><text x="32.5933%" y="243.50"></text></g><g><title>acir::arithmetic (30 gates, 0.10%)</title><rect x="32.4258%" y="253" width="0.1031%" height="23" fill="rgb(255,245,245)" fg:x="9433" fg:w="30"/><text x="32.6758%" y="267.50"></text></g><g><title>aes128.nr:39:49::shared_secret_bytes[i] (216 gates, 0.74%)</title><rect x="32.4258%" y="277" width="0.7425%" height="23" fill="rgb(255,237,237)" fg:x="9433" fg:w="216"/><text x="32.6758%" y="291.50"></text></g><g><title>acir::memory::op (186 gates, 0.64%)</title><rect x="32.5290%" y="253" width="0.6394%" height="23" fill="rgb(255,238,238)" fg:x="9463" fg:w="186"/><text x="32.7790%" y="267.50"></text></g><g><title>sha256.nr:112:22::build_msg_block(msg, message_size, msg_start) (15 gates, 0.05%)</title><rect x="33.1683%" y="205" width="0.0516%" height="23" fill="rgb(255,246,246)" fg:x="9649" fg:w="15"/><text x="33.4183%" y="219.50"></text></g><g><title>acir::blackbox::range (15 gates, 0.05%)</title><rect x="33.1683%" y="181" width="0.0516%" height="23" fill="rgb(255,246,246)" fg:x="9649" fg:w="15"/><text x="33.4183%" y="195.50"></text></g><g><title>sha256.nr:241:27::msg_block[i], msg_item as u32 (1 gates, 0.00%)</title><rect x="33.2199%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9664" fg:w="1"/><text x="33.4699%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="33.2199%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9664" fg:w="1"/><text x="33.4699%" y="171.50"></text></g><g><title>acir::arithmetic (16 gates, 0.05%)</title><rect x="33.2233%" y="133" width="0.0550%" height="23" fill="rgb(255,246,246)" fg:x="9665" fg:w="16"/><text x="33.4733%" y="147.50"></text></g><g><title>sha256.nr:247:20::lshift8(msg_item, 1) (44 gates, 0.15%)</title><rect x="33.2233%" y="181" width="0.1512%" height="23" fill="rgb(255,244,244)" fg:x="9665" fg:w="44"/><text x="33.4733%" y="195.50"></text></g><g><title>sha256.nr:410:13::item * TWO_POW_8 (44 gates, 0.15%)</title><rect x="33.2233%" y="157" width="0.1512%" height="23" fill="rgb(255,244,244)" fg:x="9665" fg:w="44"/><text x="33.4733%" y="171.50"></text></g><g><title>acir::blackbox::range (28 gates, 0.10%)</title><rect x="33.2783%" y="133" width="0.0962%" height="23" fill="rgb(255,245,245)" fg:x="9681" fg:w="28"/><text x="33.5283%" y="147.50"></text></g><g><title>acir::arithmetic (24 gates, 0.08%)</title><rect x="33.3746%" y="157" width="0.0825%" height="23" fill="rgb(255,245,245)" fg:x="9709" fg:w="24"/><text x="33.6246%" y="171.50"></text></g><g><title>sha256.nr:119:36::verify_msg_block(msg, message_size, msg_block, msg_start) (111 gates, 0.38%)</title><rect x="33.2199%" y="205" width="0.3816%" height="23" fill="rgb(255,240,240)" fg:x="9664" fg:w="111"/><text x="33.4699%" y="219.50"></text></g><g><title>sha256.nr:250:24::msg_item + msg[k] as u32 (66 gates, 0.23%)</title><rect x="33.3746%" y="181" width="0.2269%" height="23" fill="rgb(255,242,242)" fg:x="9709" fg:w="66"/><text x="33.6246%" y="195.50"></text></g><g><title>acir::blackbox::range (42 gates, 0.14%)</title><rect x="33.4571%" y="157" width="0.1444%" height="23" fill="rgb(255,244,244)" fg:x="9733" fg:w="42"/><text x="33.7071%" y="171.50"></text></g><g><title>sha256.nr:122:17::verify_msg_block_padding(msg_block, msg_byte_ptr) (7 gates, 0.02%)</title><rect x="33.6015%" y="205" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9775" fg:w="7"/><text x="33.8515%" y="219.50"></text></g><g><title>sha256.nr:262:5::verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE) (7 gates, 0.02%)</title><rect x="33.6015%" y="181" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9775" fg:w="7"/><text x="33.8515%" y="195.50"></text></g><g><title>sha256.nr:299:23::msg_block[i], zero (7 gates, 0.02%)</title><rect x="33.6015%" y="157" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9775" fg:w="7"/><text x="33.8515%" y="171.50"></text></g><g><title>acir::arithmetic (7 gates, 0.02%)</title><rect x="33.6015%" y="133" width="0.0241%" height="23" fill="rgb(255,247,247)" fg:x="9775" fg:w="7"/><text x="33.8515%" y="147.50"></text></g><g><title>sha256.nr:154:26::attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) (17 gates, 0.06%)</title><rect x="33.6255%" y="205" width="0.0584%" height="23" fill="rgb(255,246,246)" fg:x="9782" fg:w="17"/><text x="33.8755%" y="219.50"></text></g><g><title>acir::blackbox::range (17 gates, 0.06%)</title><rect x="33.6255%" y="181" width="0.0584%" height="23" fill="rgb(255,246,246)" fg:x="9782" fg:w="17"/><text x="33.8755%" y="195.50"></text></g><g><title>sha256.nr:292:19::msg_block[int_byte_ptr] % mask, zero (1 gates, 0.00%)</title><rect x="33.6840%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9799" fg:w="1"/><text x="33.9340%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="33.6840%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9799" fg:w="1"/><text x="33.9340%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="33.6874%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9800" fg:w="1"/><text x="33.9374%" y="147.50"></text></g><g><title>sha256.nr:292:19::msg_block[int_byte_ptr] % mask (3 gates, 0.01%)</title><rect x="33.6874%" y="157" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9800" fg:w="3"/><text x="33.9374%" y="171.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="33.6908%" y="133" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="9801" fg:w="2"/><text x="33.9408%" y="147.50"></text></g><g><title>sha256.nr:493:5::verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR) (9 gates, 0.03%)</title><rect x="33.6840%" y="181" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="9799" fg:w="9"/><text x="33.9340%" y="195.50"></text></g><g><title>sha256.nr:299:23::msg_block[i], zero (5 gates, 0.02%)</title><rect x="33.6977%" y="157" width="0.0172%" height="23" fill="rgb(255,248,248)" fg:x="9803" fg:w="5"/><text x="33.9477%" y="171.50"></text></g><g><title>acir::arithmetic (5 gates, 0.02%)</title><rect x="33.6977%" y="133" width="0.0172%" height="23" fill="rgb(255,248,248)" fg:x="9803" fg:w="5"/><text x="33.9477%" y="147.50"></text></g><g><title>sha256.nr:496:5::verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr) (1 gates, 0.00%)</title><rect x="33.7149%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9808" fg:w="1"/><text x="33.9649%" y="195.50"></text></g><g><title>sha256.nr:330:19::msg_block[int_byte_ptr], msg_item (1 gates, 0.00%)</title><rect x="33.7149%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9808" fg:w="1"/><text x="33.9649%" y="171.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="33.7149%" y="133" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9808" fg:w="1"/><text x="33.9649%" y="147.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="33.7183%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9809" fg:w="1"/><text x="33.9683%" y="171.50"></text></g><g><title>sha256.nr:501:29::reconstructed_len * TWO_POW_32 (4 gates, 0.01%)</title><rect x="33.7183%" y="181" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="9809" fg:w="4"/><text x="33.9683%" y="195.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.01%)</title><rect x="33.7218%" y="157" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="9810" fg:w="3"/><text x="33.9718%" y="171.50"></text></g><g><title>sha256.nr:157:9::verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size) (15 gates, 0.05%)</title><rect x="33.6840%" y="205" width="0.0516%" height="23" fill="rgb(255,246,246)" fg:x="9799" fg:w="15"/><text x="33.9340%" y="219.50"></text></g><g><title>sha256.nr:505:15::reconstructed_len, len (1 gates, 0.00%)</title><rect x="33.7321%" y="181" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9813" fg:w="1"/><text x="33.9821%" y="195.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="33.7321%" y="157" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="9813" fg:w="1"/><text x="33.9821%" y="171.50"></text></g><g><title>acir::arithmetic (9 gates, 0.03%)</title><rect x="33.7355%" y="157" width="0.0309%" height="23" fill="rgb(255,247,247)" fg:x="9814" fg:w="9"/><text x="33.9855%" y="171.50"></text></g><g><title>sha256.nr:512:13::sha256_compression(msg_block, state) (3,904 gates, 13.42%)</title><rect x="33.7355%" y="181" width="13.4200%" height="23" fill="rgb(255,195,195)" fg:x="9814" fg:w="3904"/><text x="33.9855%" y="195.50">sha256.nr:512:13::sh..</text></g><g><title>acir::blackbox::sha256_compression (3,895 gates, 13.39%)</title><rect x="33.7665%" y="157" width="13.3890%" height="23" fill="rgb(255,195,195)" fg:x="9823" fg:w="3895"/><text x="34.0165%" y="171.50">acir::blackbox::sha2..</text></g><g><title>note.nr:290:25::derive_aes_symmetric_key_and_iv_from_ecdh_shared_secret_using_sha256(
        ciphertext_shared_secret,
    ) (4,902 gates, 16.85%)</title><rect x="30.4424%" y="349" width="16.8506%" height="23" fill="rgb(255,188,188)" fg:x="8856" fg:w="4902"/><text x="30.6924%" y="363.50">note.nr:290:25::derive_aes..</text></g><g><title>aes128.nr:63:5::derive_aes_symmetric_key_and_iv_from_ecdh_shared_secret(
        shared_secret,
        extract_close_to_uniformly_random_256_bits_from_ecdh_shared_secret_using_sha256,
    ) (4,902 gates, 16.85%)</title><rect x="30.4424%" y="325" width="16.8506%" height="23" fill="rgb(255,188,188)" fg:x="8856" fg:w="4902"/><text x="30.6924%" y="339.50">aes128.nr:63:5::derive_aes..</text></g><g><title>aes128.nr:50:27::randomness_extraction_fn(shared_secret) (4,902 gates, 16.85%)</title><rect x="30.4424%" y="301" width="16.8506%" height="23" fill="rgb(255,188,188)" fg:x="8856" fg:w="4902"/><text x="30.6924%" y="315.50">aes128.nr:50:27::randomnes..</text></g><g><title>aes128.nr:43:5::sha256(shared_secret_bytes_with_separator) (4,109 gates, 14.12%)</title><rect x="33.1683%" y="277" width="14.1246%" height="23" fill="rgb(255,193,193)" fg:x="9649" fg:w="4109"/><text x="33.4183%" y="291.50">aes128.nr:43:5::sha25..</text></g><g><title>sha256.nr:51:5::digest(input) (4,109 gates, 14.12%)</title><rect x="33.1683%" y="253" width="14.1246%" height="23" fill="rgb(255,193,193)" fg:x="9649" fg:w="4109"/><text x="33.4183%" y="267.50">sha256.nr:51:5::diges..</text></g><g><title>sha256.nr:61:5::sha256_var(msg, N as u64) (4,109 gates, 14.12%)</title><rect x="33.1683%" y="229" width="14.1246%" height="23" fill="rgb(255,193,193)" fg:x="9649" fg:w="4109"/><text x="33.4183%" y="243.50">sha256.nr:61:5::sha25..</text></g><g><title>sha256.nr:160:5::hash_final_block(msg_block, h) (3,944 gates, 13.56%)</title><rect x="33.7355%" y="205" width="13.5575%" height="23" fill="rgb(255,194,194)" fg:x="9814" fg:w="3944"/><text x="33.9855%" y="219.50">sha256.nr:160:5::has..</text></g><g><title>sha256.nr:516:32::(state[j] as Field).to_be_bytes (40 gates, 0.14%)</title><rect x="47.1555%" y="181" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="13718" fg:w="40"/><text x="47.4055%" y="195.50"></text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.14%)</title><rect x="47.1555%" y="157" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="13718" fg:w="40"/><text x="47.4055%" y="171.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.14%)</title><rect x="47.1555%" y="133" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="13718" fg:w="40"/><text x="47.4055%" y="147.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.14%)</title><rect x="47.1555%" y="109" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="13718" fg:w="40"/><text x="47.4055%" y="123.50"></text></g><g><title>note.nr:294:28::aes128_encrypt(final_plaintext_bytes, iv, sym_key) (10,097 gates, 34.71%)</title><rect x="47.2930%" y="349" width="34.7083%" height="23" fill="rgb(255,161,161)" fg:x="13758" fg:w="10097"/><text x="47.5430%" y="363.50">note.nr:294:28::aes128_encrypt(final_plaintext_bytes, iv..</text></g><g><title>acir::blackbox::aes128_encrypt (10,097 gates, 34.71%)</title><rect x="47.2930%" y="325" width="34.7083%" height="23" fill="rgb(255,161,161)" fg:x="13758" fg:w="10097"/><text x="47.5430%" y="339.50">acir::blackbox::aes128_encrypt</text></g><g><title>mod.nr:169:21::self.to_be_radix (40 gates, 0.14%)</title><rect x="82.0013%" y="325" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="23855" fg:w="40"/><text x="82.2513%" y="339.50"></text></g><g><title>mod.nr:207:9::self.__to_be_radix (40 gates, 0.14%)</title><rect x="82.0013%" y="301" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="23855" fg:w="40"/><text x="82.2513%" y="315.50"></text></g><g><title>acir::blackbox::range (40 gates, 0.14%)</title><rect x="82.0013%" y="277" width="0.1375%" height="23" fill="rgb(255,244,244)" fg:x="23855" fg:w="40"/><text x="82.2513%" y="291.50"></text></g><g><title>mod.nr:178:25::bytes[i] != p[i] (124 gates, 0.43%)</title><rect x="82.1388%" y="325" width="0.4262%" height="23" fill="rgb(255,240,240)" fg:x="23895" fg:w="124"/><text x="82.3888%" y="339.50"></text></g><g><title>acir::arithmetic (124 gates, 0.43%)</title><rect x="82.1388%" y="301" width="0.4262%" height="23" fill="rgb(255,240,240)" fg:x="23895" fg:w="124"/><text x="82.3888%" y="315.50"></text></g><g><title>acir::arithmetic (174 gates, 0.60%)</title><rect x="82.5651%" y="301" width="0.5981%" height="23" fill="rgb(255,238,238)" fg:x="24019" fg:w="174"/><text x="82.8151%" y="315.50"></text></g><g><title>mod.nr:179:32::bytes[i] &lt; p[i] (239 gates, 0.82%)</title><rect x="82.5651%" y="325" width="0.8216%" height="23" fill="rgb(255,236,236)" fg:x="24019" fg:w="239"/><text x="82.8151%" y="339.50"></text></g><g><title>acir::blackbox::range (65 gates, 0.22%)</title><rect x="83.1632%" y="301" width="0.2234%" height="23" fill="rgb(255,242,242)" fg:x="24193" fg:w="65"/><text x="83.4132%" y="315.50"></text></g><g><title>note.nr:311:34::contract_address.to_field().to_be_bytes (404 gates, 1.39%)</title><rect x="82.0013%" y="349" width="1.3887%" height="23" fill="rgb(255,232,232)" fg:x="23855" fg:w="404"/><text x="82.2513%" y="363.50"></text></g><g><title>mod.nr:184:20::ok (1 gates, 0.00%)</title><rect x="83.3866%" y="325" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="24258" fg:w="1"/><text x="83.6366%" y="339.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="83.3866%" y="301" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="24258" fg:w="1"/><text x="83.6366%" y="315.50"></text></g><g><title>note.nr:336:35::aes128_encrypt(header_plaintext, iv, sym_key) (3,349 gates, 11.51%)</title><rect x="83.3901%" y="349" width="11.5122%" height="23" fill="rgb(255,199,199)" fg:x="24259" fg:w="3349"/><text x="83.6401%" y="363.50">note.nr:336:35::a..</text></g><g><title>acir::blackbox::aes128_encrypt (3,349 gates, 11.51%)</title><rect x="83.3901%" y="325" width="11.5122%" height="23" fill="rgb(255,199,199)" fg:x="24259" fg:w="3349"/><text x="83.6401%" y="339.50">acir::blackbox::a..</text></g><g><title>note.nr:448:29::compute_log(*context, note, storage_slot, recipient, sender) (22,476 gates, 77.26%)</title><rect x="17.7409%" y="373" width="77.2610%" height="23" fill="rgb(255,118,118)" fg:x="5161" fg:w="22476"/><text x="17.9909%" y="387.50">note.nr:448:29::compute_log(*context, note, storage_slot, recipient, sender)</text></g><g><title>note.nr:349:45::get_random_bytes() (29 gates, 0.10%)</title><rect x="94.9022%" y="349" width="0.0997%" height="23" fill="rgb(255,245,245)" fg:x="27608" fg:w="29"/><text x="95.1522%" y="363.50"></text></g><g><title>acir::blackbox::range (29 gates, 0.10%)</title><rect x="94.9022%" y="325" width="0.0997%" height="23" fill="rgb(255,245,245)" fg:x="27608" fg:w="29"/><text x="95.1522%" y="339.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="95.0019%" y="301" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="27637" fg:w="1"/><text x="95.2519%" y="315.50"></text></g><g><title>easy_private_uint.nr:32:9::self.set.insert(&amp;mut addend_note).emit (22,480 gates, 77.27%)</title><rect x="17.7409%" y="421" width="77.2748%" height="23" fill="rgb(255,118,118)" fg:x="5161" fg:w="22480"/><text x="17.9909%" y="435.50">easy_private_uint.nr:32:9::self.set.insert(&amp;mut addend_note).emit</text></g><g><title>note_emission.nr:16:9::_emit(self) (22,480 gates, 77.27%)</title><rect x="17.7409%" y="397" width="77.2748%" height="23" fill="rgb(255,118,118)" fg:x="5161" fg:w="22480"/><text x="17.9909%" y="411.50">note_emission.nr:16:9::_emit(self)</text></g><g><title>note.nr:449:9::context.emit_raw_note_log (4 gates, 0.01%)</title><rect x="95.0019%" y="373" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="27637" fg:w="4"/><text x="95.2519%" y="387.50"></text></g><g><title>private_context.nr:331:23::self.next_counter (4 gates, 0.01%)</title><rect x="95.0019%" y="349" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="27637" fg:w="4"/><text x="95.2519%" y="363.50"></text></g><g><title>private_context.nr:582:9::self.side_effect_counter += 1 (4 gates, 0.01%)</title><rect x="95.0019%" y="325" width="0.0137%" height="23" fill="rgb(255,248,248)" fg:x="27637" fg:w="4"/><text x="95.2519%" y="339.50"></text></g><g><title>acir::blackbox::range (3 gates, 0.01%)</title><rect x="95.0053%" y="301" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="27638" fg:w="3"/><text x="95.2553%" y="315.50"></text></g><g><title>embedded_curve_ops.nr:110:23::multi_scalar_mul_array_return(points, scalars) (1,275 gates, 4.38%)</title><rect x="95.0156%" y="325" width="4.3828%" height="23" fill="rgb(255,218,218)" fg:x="27641" fg:w="1275"/><text x="95.2656%" y="339.50">embed..</text></g><g><title>acir::blackbox::multi_scalar_mul (1,275 gates, 4.38%)</title><rect x="95.0156%" y="301" width="4.3828%" height="23" fill="rgb(255,218,218)" fg:x="27641" fg:w="1275"/><text x="95.2656%" y="315.50">acir:..</text></g><g><title>lifecycle.nr:23:21::note.compute_note_hash (1,278 gates, 4.39%)</title><rect x="95.0156%" y="373" width="4.3931%" height="23" fill="rgb(255,218,218)" fg:x="27641" fg:w="1278"/><text x="95.2656%" y="387.50">lifec..</text></g><g><title>value_note.nr:21:1::#[note] (1,278 gates, 4.39%)</title><rect x="95.0156%" y="349" width="4.3931%" height="23" fill="rgb(255,218,218)" fg:x="27641" fg:w="1278"/><text x="95.2656%" y="363.50">value..</text></g><g><title>mod.nr:102:15::scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi (3 gates, 0.01%)</title><rect x="99.3984%" y="325" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="28916" fg:w="3"/><text x="99.6484%" y="339.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="99.3984%" y="301" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="28916" fg:w="3"/><text x="99.6484%" y="315.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="99.4088%" y="301" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="28919" fg:w="1"/><text x="99.6588%" y="315.50"></text></g><g><title>main.nr:42:9::counters.at(owner).add (23,761 gates, 81.68%)</title><rect x="17.7409%" y="445" width="81.6782%" height="23" fill="rgb(255,114,114)" fg:x="5161" fg:w="23761"/><text x="17.9909%" y="459.50">main.nr:42:9::counters.at(owner).add</text></g><g><title>easy_private_uint.nr:32:9::self.set.insert (1,281 gates, 4.40%)</title><rect x="95.0156%" y="421" width="4.4034%" height="23" fill="rgb(255,218,218)" fg:x="27641" fg:w="1281"/><text x="95.2656%" y="435.50">easy_..</text></g><g><title>private_set.nr:62:9::create_note(self.context, self.storage_slot, note) (1,281 gates, 4.40%)</title><rect x="95.0156%" y="397" width="4.4034%" height="23" fill="rgb(255,218,218)" fg:x="27641" fg:w="1281"/><text x="95.2656%" y="411.50">priva..</text></g><g><title>lifecycle.nr:34:5::context.push_note_hash (3 gates, 0.01%)</title><rect x="99.4088%" y="373" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="28919" fg:w="3"/><text x="99.6588%" y="387.50"></text></g><g><title>private_context.nr:141:69::self.next_counter (3 gates, 0.01%)</title><rect x="99.4088%" y="349" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="28919" fg:w="3"/><text x="99.6588%" y="363.50"></text></g><g><title>private_context.nr:582:9::self.side_effect_counter += 1 (3 gates, 0.01%)</title><rect x="99.4088%" y="325" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="28919" fg:w="3"/><text x="99.6588%" y="339.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="99.4122%" y="301" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="28920" fg:w="2"/><text x="99.6622%" y="315.50"></text></g><g><title>acir::arithmetic (3 gates, 0.01%)</title><rect x="99.4191%" y="253" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="28922" fg:w="3"/><text x="99.6691%" y="267.50"></text></g><g><title>map.nr:39:36::derive_storage_slot_in_map(self.storage_slot, key) (80 gates, 0.27%)</title><rect x="99.4191%" y="421" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="435.50"></text></g><g><title>map.nr:7:5::poseidon2_hash([storage_slot, key.to_field()]) (80 gates, 0.27%)</title><rect x="99.4191%" y="397" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="411.50"></text></g><g><title>hash.nr:239:5::std::hash::poseidon2::Poseidon2::hash(inputs, N) (80 gates, 0.27%)</title><rect x="99.4191%" y="373" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="387.50"></text></g><g><title>poseidon2.nr:16:9::Poseidon2::hash_internal(input, message_size, message_size != N) (80 gates, 0.27%)</title><rect x="99.4191%" y="349" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="363.50"></text></g><g><title>poseidon2.nr:82:9::sponge.squeeze (80 gates, 0.27%)</title><rect x="99.4191%" y="325" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="339.50"></text></g><g><title>poseidon2.nr:55:9::self.perform_duplex (80 gates, 0.27%)</title><rect x="99.4191%" y="301" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="315.50"></text></g><g><title>poseidon2.nr:35:22::crate::hash::poseidon2_permutation(self.state, 4) (80 gates, 0.27%)</title><rect x="99.4191%" y="277" width="0.2750%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="80"/><text x="99.6691%" y="291.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="99.4294%" y="253" width="0.2647%" height="23" fill="rgb(255,242,242)" fg:x="28925" fg:w="77"/><text x="99.6794%" y="267.50"></text></g><g><title>main.nr:42:9::counters.at (81 gates, 0.28%)</title><rect x="99.4191%" y="445" width="0.2784%" height="23" fill="rgb(255,242,242)" fg:x="28922" fg:w="81"/><text x="99.6691%" y="459.50"></text></g><g><title>map.nr:42:9::state_var_constructor(self.context, derived_storage_slot) (1 gates, 0.00%)</title><rect x="99.6941%" y="421" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29002" fg:w="1"/><text x="99.9441%" y="435.50"></text></g><g><title>main.nr:16:5::#[storage] (1 gates, 0.00%)</title><rect x="99.6941%" y="397" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29002" fg:w="1"/><text x="99.9441%" y="411.50"></text></g><g><title>easy_private_uint.nr:18:16::storage_slot != 0 (1 gates, 0.00%)</title><rect x="99.6941%" y="373" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29002" fg:w="1"/><text x="99.9441%" y="387.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="99.6941%" y="349" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29002" fg:w="1"/><text x="99.9441%" y="363.50"></text></g><g><title>acir::arithmetic (6 gates, 0.02%)</title><rect x="99.6975%" y="301" width="0.0206%" height="23" fill="rgb(255,247,247)" fg:x="29003" fg:w="6"/><text x="99.9475%" y="315.50"></text></g><g><title>hash.nr:65:9::hash_args(self.fields) (83 gates, 0.29%)</title><rect x="99.6975%" y="421" width="0.2853%" height="23" fill="rgb(255,242,242)" fg:x="29003" fg:w="83"/><text x="99.9475%" y="435.50"></text></g><g><title>hash.nr:97:9::poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS) (83 gates, 0.29%)</title><rect x="99.6975%" y="397" width="0.2853%" height="23" fill="rgb(255,242,242)" fg:x="29003" fg:w="83"/><text x="99.9475%" y="411.50"></text></g><g><title>hash.nr:434:5::sponge.squeeze (83 gates, 0.29%)</title><rect x="99.6975%" y="373" width="0.2853%" height="23" fill="rgb(255,242,242)" fg:x="29003" fg:w="83"/><text x="99.9475%" y="387.50"></text></g><g><title>poseidon2.nr:59:9::self.perform_duplex (83 gates, 0.29%)</title><rect x="99.6975%" y="349" width="0.2853%" height="23" fill="rgb(255,242,242)" fg:x="29003" fg:w="83"/><text x="99.9475%" y="363.50"></text></g><g><title>poseidon2.nr:39:22::std::hash::poseidon2_permutation(self.state, 4) (83 gates, 0.29%)</title><rect x="99.6975%" y="325" width="0.2853%" height="23" fill="rgb(255,242,242)" fg:x="29003" fg:w="83"/><text x="99.9475%" y="339.50"></text></g><g><title>acir::blackbox::poseidon2_permutation (77 gates, 0.26%)</title><rect x="99.7181%" y="301" width="0.2647%" height="23" fill="rgb(255,242,242)" fg:x="29009" fg:w="77"/><text x="99.9681%" y="315.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="99.9828%" y="349" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29086" fg:w="1"/><text x="100.2328%" y="363.50"></text></g><g><title>initialization_utils.nr:33:5::context.push_nullifier_read_request (3 gates, 0.01%)</title><rect x="99.9828%" y="421" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="29086" fg:w="3"/><text x="100.2328%" y="435.50"></text></g><g><title>private_context.nr:244:64::self.next_counter (3 gates, 0.01%)</title><rect x="99.9828%" y="397" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="29086" fg:w="3"/><text x="100.2328%" y="411.50"></text></g><g><title>private_context.nr:582:9::self.side_effect_counter += 1 (3 gates, 0.01%)</title><rect x="99.9828%" y="373" width="0.0103%" height="23" fill="rgb(255,248,248)" fg:x="29086" fg:w="3"/><text x="100.2328%" y="387.50"></text></g><g><title>acir::blackbox::range (2 gates, 0.01%)</title><rect x="99.9863%" y="349" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="29087" fg:w="2"/><text x="100.2363%" y="363.50"></text></g><g><title>acir::arithmetic (1 gates, 0.00%)</title><rect x="99.9931%" y="397" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29089" fg:w="1"/><text x="100.2431%" y="411.50"></text></g><g><title>all (29,091 gates, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="23" fill="rgb(255,100,100)" fg:x="0" fg:w="29091"/><text x="0.2500%" y="483.50"></text></g><g><title>main.nr:54:10::et counter (88 gates, 0.30%)</title><rect x="99.6975%" y="445" width="0.3025%" height="23" fill="rgb(255,241,241)" fg:x="29003" fg:w="88"/><text x="99.9475%" y="459.50"></text></g><g><title>private_context.nr:94:34::inputs.start_side_effect_counter + 1 (2 gates, 0.01%)</title><rect x="99.9931%" y="421" width="0.0069%" height="23" fill="rgb(255,248,248)" fg:x="29089" fg:w="2"/><text x="100.2431%" y="435.50"></text></g><g><title>acir::blackbox::range (1 gates, 0.00%)</title><rect x="99.9966%" y="397" width="0.0034%" height="23" fill="rgb(255,249,249)" fg:x="29090" fg:w="1"/><text x="100.2466%" y="411.50"></text></g></svg></svg>